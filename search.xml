<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git基础使用</title>
      <link href="/wenzhang/Git%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/wenzhang/Git%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Git的简单使用"><a href="#Git的简单使用" class="headerlink" title="Git的简单使用"></a>Git的简单使用</h1><p>Git是一个非常强大的版本管理工具，使用它可以方便管理我们的项目。</p><p><a href="https://git-scm.com/downloads">Git下载地址</a></p><h2 id="一、Git工作方式"><a href="#一、Git工作方式" class="headerlink" title="一、Git工作方式"></a>一、Git工作方式</h2><p>如图</p><p><img src="https://picgo.symbol.cloudns.be/img/111.png"></p><p>我们在使用Git之前，要先在本地初始化环境，可以直接在项目文件夹内初始化。</p><p>执行：<code>git init</code></p><p>这样环境就初始化成功了。</p><p>此时只有一个master&#x2F;main分支，首先我们需要将本地文件同步到本地的Git仓库，执行图中的两个命令</p><p><code>git add .</code></p><p><code>git commit -m &quot;描述&quot;</code></p><p>到这一步，同步工作就完成了。</p><h2 id="二、Git的一般工作流程"><a href="#二、Git的一般工作流程" class="headerlink" title="二、Git的一般工作流程"></a>二、Git的一般工作流程</h2><p>以主分支master为例，我们一般不会在主分支上去修改代码，通常会新建一个新的分支，在新的分支上完成功能开发，保证没有问题后，才合并到master分支中。</p><p>我们新建一个分支dev：<code>git branch dev</code>，切换到dev分支:<code>git checkout dev</code></p><p>此时我们有了两个分支，一个master,一个dev,所有工作都在dev上完成，完成后再合并到master。</p><p>但在实现开发中，通常时几个人一起完成，所以，仅有dev分支也是不够的，必须在dev上每人都有自己的分支。</p><p>以3人为例：</p><p><img src="https://picgo.symbol.cloudns.be/img/222.png"></p><p>在dev分支上，我们建好了三个分支，ABC三个人做自己的工作，当完成工作时就合并到dev分支上。</p><p>比如A要把代码合并到dev分支上，切换到dev分支上执行：<code>git merge A</code></p><p>但是轮到B合并时就会出错了，因为此时dev分支上的最新代码包含了A的那部分，B没有A那部分代码，所以无法合并成功。</p><p>为了解决这个问题，需要用到rebase命令，它可以替换B这边的dev的更新点，替换为上一次commit的位置。这时再合并，就能合并成功了。具体执行如下，B要先切换到自己的分支：<code>git checkout B</code></p><p><code>git rebase dev</code>，然后切换到dev分支：<code>git checkout dev</code>，合并B分支到dev分支上：<code>git merge B</code></p><p>C要想合并自己的代码到dev分支上，也同样需要跟B一样的操作。</p><p><code>git checkout C</code></p><p><code>git rebase dev</code></p><p><code>git checkout dev</code></p><p><code>git merge C</code></p><p>与合并相关的命令有如下：</p><p>查看已合并的分支：<code>git branch --merged</code></p><p>查看未合并的分支：<code>git branch --no-merged</code></p><p>删除已合并的分支：<code>git branch -d &lt;分支名&gt;</code></p><p>强制删除未合并的分支：<code>git branch -D &lt;分支名&gt;</code></p><p>以上是简单的Git工作流程，主要的思想就是对分支进行管理，开发一个功能，就应该新建分支，同事来合作完成某个任务，也应该新建分支。当工作做完时，再合并删除分支。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ机器人部署到服务器</title>
      <link href="/wenzhang/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/wenzhang/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="QQ机器人部署到服务器"><a href="#QQ机器人部署到服务器" class="headerlink" title="QQ机器人部署到服务器"></a>QQ机器人部署到服务器</h3><p>服务器：<strong>centos7.63.10.0-1160.76.1.el7.x86_64</strong></p><p>所需环境：</p><p><strong>openssl&gt;&#x3D;1.1.1</strong></p><p><strong>python&gt;&#x3D;3.10</strong></p><h4 id="OpenSSL安装"><a href="#OpenSSL安装" class="headerlink" title="OpenSSL安装"></a>OpenSSL安装</h4><p>0、如果你的版本**&gt;&#x3D;1.1.1<strong>，则不需要安装。（版本查看：</strong>openssl version**）</p><p>1、下载<strong>openssl</strong></p><p>下载地址：<a href="https://github.com/openssl/openssl/tags">下载地址)</a></p><p>2、将下载好的文件，上传到服务器，比如我放到了 <strong>&#x2F;root&#x2F;qin&#x2F;</strong> 这个目录下</p><p>也可以直接下载：<code>wget https://www.openssl.org/source/openssl-1.1.1n.tar.gz --no-check-certificate</code></p><p>本人下载的文件名是：<strong>openssl-OpenSSL_1_1_1o.tar.gz</strong></p><p>3、解压：<code>tar -zxvf openssl-OpenSSL_1_1_1o.tar.gz</code></p><p>4、<code>cd openssl-OpenSSL </code></p><p>5、配置：<code>./config --prefix=/usr/local/openssl</code></p><p>6、编译和安装：<code>make -j &amp;&amp; make install</code></p><p>7、查看版本：<code>openssl version</code></p><p>如果版本不对，需要备份原来的，再创建软链接</p><p>8、备份：<code>mv /usr/bin/openssl /usr/bin/openssl.bak</code></p><p>9、创建<strong>openssl</strong>命令软链接：</p><p><code>ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl </code></p><p><code>ldconfig</code></p><p>10、对<strong>libssl.so.1.1</strong>文件创建软链接。假如<strong>libssl.so.1.1</strong> 文件在**&#x2F;usr&#x2F;local&#x2F;openssl&#x2F;lib&#x2F;**下面，如果找不到就看看lib64有没有</p><p><code>ln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1</code></p><p><code>ln -s /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1</code></p><p><code>ldconfig</code></p><p>11、添加环境变量，路径需要与自己系统中的相同。</p><p><code> export LD_LIBRARY_PATH=/usr/local/openssl/lib:$LD_LIBRARY_PATH</code></p><p><code>source ~/.bash_profile</code></p><p>12、再次查看版本：<code>openssl version</code></p><p>到这里，确保版本正确再进行下一步。</p><h3 id="Python安装"><a href="#Python安装" class="headerlink" title="Python安装"></a>Python安装</h3><p><strong>python</strong>环境的要求是: <strong>3.10&#x3D;&lt; verion &lt;3.11</strong></p><p>0、安装一些必备的依赖库：<code>yum install -y ncurses-devel gdbm-devel xz-devel sqlite-devel tk-devel uuid-devel readline-devel bzip2-devel libffi-devel</code></p><p><code>yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel libffi-devel gcc make -y</code></p><p>1、切换到 <strong>&#x2F;root&#x2F;qin&#x2F;<strong>目录，下载</strong>Python3.10.6</strong>（也可以下载其他版本）</p><p><code>wget https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz --no-check-certificate</code></p><p>2、解压：<code>tar -zxvf Python-3.10.6.tgz</code></p><p>3、进入<strong>python</strong>目录：<code>cd Python-3.10.6</code></p><p>4、配置<strong>Python</strong>，指定安装目录，和指定<strong>openssl</strong>目录，这是必备的，不然安装<strong>nb-cli</strong>很有可能会失败。</p><p><code>./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl --with-openssl-rpath=auto</code></p><p>5、编译和安装：<code>make &amp;&amp; make install</code></p><p>如果在安装的时候，提示缺少必备的库，请先安装对应的库。</p><p>然后执行<code>make clean</code>,再<code>make &amp;&amp; make install</code></p><p>6、添加环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PATH=$PATH:$HOME/bin:/usr/local/bin</span><br><span class="line">export PATH</span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>也可以添加一个指定的别名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开~/.bashrc:  vim ~/.bashrc</span><br><span class="line">添加:alias python3=&#x27;/usr/local/bin/python3&#x27;</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="nonebot环境配置"><a href="#nonebot环境配置" class="headerlink" title="nonebot环境配置"></a>nonebot环境配置</h3><p>1、安装脚手架：<code>pip3 install nb-cli</code></p><p>2、创建机器人：<code>nb create</code></p><p>3、配置环境，与<strong>windows</strong>差不多</p><p>4、进入项目目录，执行：<code>python3 bot.py</code></p><p>5、如果第四步出错，根据相应错误去解决。</p><p>6、实测在<strong>windows</strong>配置好，直接传到<strong>linux</strong>有问题，需要在<strong>linux</strong>重新执行：<code>nb create</code></p><p>7、关于环境</p><p><strong>.env</strong>是指定环境，指定为<strong>dev</strong>,是开发环境，指定为<strong>prod</strong>是生产环境。</p><p>比如在<strong>dev</strong>环境下，所有的配置项都要在**.env.dev**中去修改，像端口号，超级用户和其他插件的一些配置。</p><h3 id="cq-http配置"><a href="#cq-http配置" class="headerlink" title="cq-http配置"></a>cq-http配置</h3><p>1、在<strong>windows</strong>上先配置好<strong>windows</strong>版本的机器人，主要是需要<strong>config.yml</strong>配置文件和<strong>session.token</strong>、<strong>device.json</strong></p><p>主要是设置通信方式为：<strong>反向websocker</strong></p><p><strong>config.yml</strong>中添加QQ账号和反向<strong>WS</strong>设置：<code>universal: ws://127.0.0.1:53245/onebot/v11/ws</code></p><p>这里的端口号要与<strong>nonebot</strong>环境中的端口号相同。</p><p>2、下载<strong>linux</strong>版本<strong>cq-http</strong>，下载这个：<strong>go-cqhttp_linux_amd64.tar.gz</strong></p><p>3、解压出来，放在与<strong>windows</strong>机器人同一目录，然后删除与<strong>windows</strong>相关的东西，再传到<strong>linux</strong>服务器上。</p><p>4、给<strong>linux</strong>版本的<strong>go-cqhttp</strong>添加权限，否则无法运行。</p><p><code>chmod 777 go-cqhttp</code></p><h3 id="运行机器人"><a href="#运行机器人" class="headerlink" title="运行机器人"></a>运行机器人</h3><p>分别进入到服务器中机器人项目目录和cq-http目录，一般两个目录会放在一起。</p><p>执行：<code>python3 bot.py</code> 和 <code>./go_cqhttp</code></p><p>后台运行：<code>nohup [command] &amp;</code></p><h3 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h3><p>1、自己开发</p><p>2、使用别人的：<a href="https://nb2.baka.icu/store">none插件商店</a></p><p>插件具体安装方法，在插件商店中可以看到。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器人 </tag>
            
            <tag> centos </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora配合github做版本管理</title>
      <link href="/wenzhang/Typora%E9%85%8D%E5%90%88github%E6%9D%A5%E5%81%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
      <url>/wenzhang/Typora%E9%85%8D%E5%90%88github%E6%9D%A5%E5%81%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="使用github来做版本管理"><a href="#使用github来做版本管理" class="headerlink" title="使用github来做版本管理"></a>使用github来做版本管理</h1><ul><li><p>注册一个github账户，记住email和name.</p></li><li><p>下载安装一个winddows版本的git：<a href="https://gitforwindows.org/">Git for Windows</a></p><h2 id="配置本机的公钥和私钥"><a href="#配置本机的公钥和私钥" class="headerlink" title="配置本机的公钥和私钥"></a>配置本机的公钥和私钥</h2></li><li><p>在用户目录下新建一个 <strong>.ssh</strong> 目录，进入**.ssh** ,右键点击：<code>Git Bash Here</code></p></li><li><p>执行：<code>ssh-keygen -t rsa</code> 并按回车。(如果提示没有ssh-keygen命令，可以在系统设置中添加可选功能，把openssh客户端和服务端一起安装。)</p></li><li><p>执行完成之后，会在.ssh 目录下生成两个文件。<code>id_rsa,id_rsa_pub</code>.其中<code>id_rsa.pub</code>是公钥</p></li><li><p>打开github的设置，选择<code>SSH Keys</code>，添加一个<code>new SSH key</code>,输入<code>id_rsa.pub</code>中的内容。</p></li><li><p>打开要保存在github的笔记仓库（没有就新建一个），复制SSH链接。</p></li></ul><h2 id="远端与本地的同步"><a href="#远端与本地的同步" class="headerlink" title="远端与本地的同步"></a>远端与本地的同步</h2><ul><li>在本地新建一个文件夹，用来同步github。进入文件夹执行 <code>Git Bash Here</code></li><li>拉取到本地，输入 <code>git clone ssh链接</code>  ssh链接就是上一步复制的链接</li><li>进入有.git的新生成的文件夹，这里就可以创建树状结构的文件目录了。</li></ul><h2 id="本地提交到github"><a href="#本地提交到github" class="headerlink" title="本地提交到github"></a>本地提交到github</h2><ul><li><p>进入到有.github的文件夹，执行 <code>Git Bash Here</code> </p></li><li><p>添加全部新文件 <code>git add .</code> 也可以手动指定添加哪些文件</p></li><li><p>提交：<code>git commit -m &quot;描述&quot;</code></p></li><li><p>如果在提交这一步出错，需要设置一下githhub账户的邮箱和名字。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure><p>设置好后，再次提交就行了。</p></li><li><p>Push到github</p><p><code>git push</code></p></li></ul><p>到此，同步设置已经完成了。</p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typora </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ffmpeg基础使用</title>
      <link href="/wenzhang/ffmpeg%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/wenzhang/ffmpeg%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一、下载安装"><a href="#一、下载安装" class="headerlink" title="一、下载安装"></a>一、下载安装</h1><p>进入官网进行下载对应平台<a href="http://ffmpeg.org/download.html#build-windows">Download FFmpeg</a></p><p>下载完成后，在它的bin&#x2F;目录下有三个文件：<code>ffmpeg.exe</code> <code>ffplay</code> <code>ffprobe.exe</code> 他们分别是：编解码器，播放器和音视频分析器。</p><p>需要把bin&#x2F;目录添加至环境变量path中，否则cmd识别不到ffmpeg命令。</p><p><code>ffplay INPUT</code> 可直接播放视频</p><p>ffprobe 是分析工具，例如查看一个视频的编码格式 </p><p><code>ffprobe -hide_banner xxx.mov</code> 可以精简查看一个视频的编码格式</p><p>这里主要介绍主角 <strong>ffmpeg</strong> 的使用(所有的操作都在cmd命令行中进行)</p><p>Linux 安装：</p><p>Nux存储库依赖于Epel软件存储库。如果您的系统启用EPEL存储库，请键入以下命令将其启用：</p><p>sudo yum install epel-release</p><p>接下来，导入Repository GPG密钥并通过安装rpm软件包启用Nux存储库：</p><p>sudo rpm -v –import <a href="http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro">http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro</a></p><p>sudo rpm -Uvh <a href="http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm">http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm</a></p><p>开始安装：</p><p>sudo yum install ffmpeg ffmpeg-devel</p><p>检查看装是否成功：</p><p>ffmpeg -version</p><pre><code>yum -y install wgetwget --no-check-certificate https://www.johnvansickle.com/ffmpeg/old-releases/ffmpeg-4.0.3-64bit-static.tar.xztar -xJf ffmpeg-4.0.3-64bit-static.tar.xzcd ffmpeg-4.0.3-64bit-staticmv ffmpeg /usr/bin &amp;&amp; mv ffprobe /usr/bin &amp;&amp; mv qt-faststart /usr/bin &amp;&amp; mv ffmpeg-10bit /usr/bin</code></pre><h1 id="二、视频的封装与编码"><a href="#二、视频的封装与编码" class="headerlink" title="二、视频的封装与编码"></a>二、视频的封装与编码</h1><h3 id="视频容器封装格式："><a href="#视频容器封装格式：" class="headerlink" title="视频容器封装格式："></a>视频容器封装格式：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">包含 mp4,mov,avi,webm,mkv 等等</span><br></pre></td></tr></table></figure><p>一个视频包含视频，音频，字幕等，容器是以不同的方式和存储这些不同类型的数据。每种格式支持的视频，音频以及字幕的数量不同，所支持的视频编码格式也不同。</p><h3 id="视频编码格式："><a href="#视频编码格式：" class="headerlink" title="视频编码格式："></a>视频编码格式：</h3><p>编码格式决定了视频内容的解码、压缩以及存储方式</p><p>常见的编码格式：H264、ProRes、DNXHD</p><p>编码只处理视频，封装是把视频，音频，字幕等再进行一次统一打包，最终形成完整的视频文件。</p><h3 id="常用操作："><a href="#常用操作：" class="headerlink" title="常用操作："></a>常用操作：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">查看ffmpeg所支持的所有容器封闭格式列表：ffmpeg -formats</span><br><span class="line">D表示解封装，E表示支持的封装。</span><br><span class="line">---------</span><br><span class="line">查看mp4的封装格式的说明和参数选项：ffmpeg -h muxer=mp4</span><br><span class="line">Muxer mp4下面可以看到常用后缀，文件媒体类型，默认音视频编码等</span><br><span class="line">还有在使用ffmpeg时的一些参数选项</span><br><span class="line">----------</span><br><span class="line">不同的封装格式，对视频编码格式有所不同</span><br><span class="line">MOV可以支持 h264、ProRes、NDXHD</span><br><span class="line">MP4支持h264,但不支持ProRes和NDXHD</span><br><span class="line">查看所有视频编码格式列表：ffmpeg -codecs</span><br><span class="line">D表示支持解码操作</span><br><span class="line">E表示支持编码操作</span><br><span class="line">V表示支持视频的编解码操作</span><br><span class="line">A表示音频编解码操作</span><br><span class="line">S表示字幕格式的编解码操作</span><br><span class="line">I表示帧内编码</span><br><span class="line">L表示该编码格式属于有损压缩方式</span><br><span class="line">S表示该编码格式属于无损压缩方式</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一般视频转码过程：</span><br><span class="line">Demuxer--&gt;Decoder--&gt;encoder--&gt;muxer</span><br><span class="line">解封装----&gt;解码------&gt;重新编码--&gt;重新封装</span><br><span class="line">如果原始文件与目标文件的视频编码一样，则可以省去中间解码、重新编码的大量计算过程。直接 Demuxer--&gt;muxer即可。</span><br></pre></td></tr></table></figure><h1 id="三、视频转码"><a href="#三、视频转码" class="headerlink" title="三、视频转码"></a>三、视频转码</h1><p>在ffmpeg进行视频转码时，都是使用类似的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ffpmeg -i INPUT -c:v ENCODER1 OPTIONS1 -c:a ENCODER2 OPTIONS2 OUTPUT</span><br><span class="line">------参数解释-------</span><br><span class="line">INPUT  是输入文件</span><br><span class="line">ENCODER1 表示视频编码器的名称</span><br><span class="line">OPTIONS1 表示视频编码器参数和选项</span><br><span class="line">ENCODER2 表示音频编码器的名称</span><br><span class="line">OPTIONS2 表示音频编码器参数和选项</span><br><span class="line">OUTPUT  表示输出文件名称</span><br><span class="line">所有的转换，都遵循这个规律</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">H264转码</span><br><span class="line">ffmpeg -i INPUT -c:v libx264 -c:a aac OUTPUT</span><br><span class="line">**************</span><br><span class="line">我们可以选用上面的OPTIONS来进行画质、码率、限制文件大小的调整</span><br><span class="line">使用：ffmpeg -h encoder=libx264 查看H264编码的参数和选项</span><br><span class="line">-crf表示恒定质量模式下的画质级别，数字越小，画质越好，但转码速度也越慢。一般是16到23之间。</span><br><span class="line">ffmpeg -i INPUT -c:v libx264 -crf 18 -c:a aac -ab 320k OUTPUT</span><br><span class="line">-ab 表示音频码率为320k</span><br><span class="line">---------------------</span><br><span class="line">ProRes转码</span><br><span class="line">将一个H264转为ProRes格式</span><br><span class="line">ffmpeg -i INPUT -c:v prores -profile 1 -c:a aac -ab 320k OUTPUT</span><br><span class="line">prores 有多个子编码规格，需要使用 -profile来进行指定</span><br><span class="line">可以用 ffmpeg -h encoder=prores_ks来查看参数说明</span><br><span class="line">---------------------</span><br><span class="line">DNXHD转码</span><br><span class="line">ffmpeg -i INPUT -c:v dnxhd -profile dhxhr_lb -pix_fmt yuv422p -c:a aac -ab 320k OUTPUT</span><br><span class="line">dnxhd 有多个子编码规格，需要使用 -profile来进行指定,dnxhd还需要指定像素格式</span><br><span class="line">可以用 ffmpeg -h encoder=dnxhd 来查看参数说明</span><br><span class="line">---------------------</span><br><span class="line">CFHD编码</span><br><span class="line">ffmpeg -i INPUT -c:v cfhd -quality high -c:a aac -ab 320k OUTPUT</span><br><span class="line">可以用 ffmpeg -h encoder=cfhd 来查看参数说明</span><br></pre></td></tr></table></figure><p>如果两个视频编码一样，则不需要经过复杂的解码编码过程</p><p><code>ffmpeg -i INPUT -c copy OUTPUT</code></p><p>-c copy 表示复制输入文件中的视频与音频，相当于 -c:v -c:a</p><h1 id="四、音频转码"><a href="#四、音频转码" class="headerlink" title="四、音频转码"></a>四、音频转码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">常用音频格式：mp3,aac,wav,flac</span><br><span class="line">aac是常用的音频编码，通常与h264相匹配</span><br><span class="line">wav在ffmpeg中称为PCM编码</span><br><span class="line">flac是一种无损音频压缩编码</span><br><span class="line">音频最重要的四要素：</span><br><span class="line">ENCODER SAMPLE CHANNEL BITRATE</span><br><span class="line">编码器、 采样率、 声道、   码率</span><br><span class="line">采样率一般使用 44.1KHZ和48KHZ</span><br><span class="line">声道：单声道，双声道，多声道</span><br><span class="line">码率：码率越高，音质越好，但一般网站要求不超过320k</span><br><span class="line">-------------------</span><br><span class="line">音频转码基础命令格式：</span><br><span class="line">ffmpeg -i INPUT -c:a ENCODER -ar SAMPLE -ac CHANNEL -ab BITRATE OUTPUT</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">WAV转MP3</span><br><span class="line">ffmpeg -i INPUT -c:a libmp3lame -ar 44100 -ac 2 -ab 320k OUTPUT</span><br><span class="line">--------------</span><br><span class="line">WAV转AAC</span><br><span class="line">ffmpeg -i INPUT -c:a aac -ar 44100 -ac 2 -ab 320k OUTPUT</span><br><span class="line">--------------</span><br><span class="line">FLAC转MP3</span><br><span class="line">ffmpeg -i INPUT -c:a libmp3lame -ar 44100 -ac 2 -ab 320k OUTPUT</span><br></pre></td></tr></table></figure><h1 id="五、常用操作"><a href="#五、常用操作" class="headerlink" title="五、常用操作"></a>五、常用操作</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">截取视频片段：</span><br><span class="line">ffmpeg -ss 00:00:00 -to 00:05:23 -i INPUT -y -f mp4 -vcodec copy -acodec copy -q:v 1 OUTPUT</span><br><span class="line">从INPUT文件视频里，截取0时0分0秒到0时5分23秒的视频。输出生成OUTPUT</span><br><span class="line">参数说明：</span><br><span class="line">-ss 起始时间</span><br><span class="line">-to 终止时间</span><br><span class="line">-i输入文件</span><br><span class="line">-y无需询问，直接覆盖输出文件(如果有的话)</span><br><span class="line">-f指定输出的视频格式</span><br><span class="line">-vcodec指定视频编码格式，copy 则保持不变</span><br><span class="line">-acodec 指定音频编码格式, copy 则保持不变</span><br><span class="line">-q:vq是质量，v是视频，v的取值范围是[1,35]，1对应最佳质量</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">截取保存一张图片：</span><br><span class="line">ffmpeg -ss 00:03:02 -i INPUT -vframes 1 output.jpg</span><br><span class="line">参数说明：</span><br><span class="line">-ss:起始时间</span><br><span class="line">-vframes 1：取当前第一帧</span><br><span class="line">---------------------------</span><br><span class="line">每秒钟截取一张：</span><br><span class="line">ffmpeg -i INPUT -vf fps=1 image_%d.jpg</span><br><span class="line">参数说明：</span><br><span class="line">-vf fps=1:表示frame per second截取一张</span><br><span class="line">可以轻易写出每X秒一张的命令，比如每100秒一张：</span><br><span class="line">ffmpeg -i INPUT -vf fps=1/100 image_%d.jpg</span><br><span class="line">-----------------------------</span><br><span class="line">保存关键帧：</span><br><span class="line">ffmpeg -i INPUT -vf &quot;select=&#x27;eq(pict_type,PICT_TYPE_I)&#x27;&quot; -vsync vfr image_%d.jpg</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">从视频中提取音频：</span><br><span class="line">ffmpeg -i INPUT -f wav -ar 16000 OUTPUT</span><br><span class="line">参数说明：</span><br><span class="line">-f： 强制输出格式为wav</span><br><span class="line">-ar：设置采样频率</span><br><span class="line">ffmpeg -i INPUT -vn -acodec copy OUTPUT.aac</span><br></pre></td></tr></table></figure><p>音频的转换查看 <a href="#%E5%9B%9B%E3%80%81%E9%9F%B3%E9%A2%91%E8%BD%AC%E7%A0%81">音频转码</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">去水印：</span><br><span class="line">ffmpeg -i INPUT -vf delogo=x=163:y=116:w=148:h=45:show=0 OUTPUT</span><br><span class="line">在x=163，y=116，宽=148,高=45的矩形范围内，生成滤镜水印。</span><br><span class="line">(x,y)和(宽,高)就是水印的位置，如果要准确找到水印位置，可以先截取一张图片，找到(x,y)和(w,h)</span><br></pre></td></tr></table></figure><p>rmvb转mp4</p><p><code>ffmpeg -i &quot;02.rmvb&quot; -vcodec libx264 -acodec copy &quot;output.mp4&quot;</code></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ffmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picgo的使用</title>
      <link href="/wenzhang/picgo%E9%85%8D%E7%BD%AE/"/>
      <url>/wenzhang/picgo%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="一、下载安装"><a href="#一、下载安装" class="headerlink" title="一、下载安装"></a>一、下载安装</h1><p>在Github上下载 <a href="https://github.com/Molunerfinn/PicGo/releases">Releases · Molunerfinn&#x2F;PicGo (github.com)</a></p><p>以下演示用的是2.3.1-beta.5 版本</p><p>下载安装即可</p><h1 id="二、Github的配置"><a href="#二、Github的配置" class="headerlink" title="二、Github的配置"></a>二、Github的配置</h1><p><img src="https://picgo.symbol.cloudns.be/img/picgo.png"></p><p>配置如上，首先要在Github在开通一个账户，新建仓库名为PicGo.这里是演示，名字不重要，重要的是要有仓库保存图片。</p><p>分支名填写 main </p><p>指定路径 img&#x2F; 一定要填写目录的形式，即要有 &#x2F;</p><p>Token的配置：</p><p>点击头像–&gt;Settings–&gt;Developer settings</p><p>再选择 Personal access tokens</p><p>点击Generate a personal access token生成一个新的令牌</p><p>把repo这个勾打上即可，然后Generate token </p><p>复制到图床上要填写token的位置。</p><p>github上这个token值只显示一次。</p><p>指定存储路径可随意填写</p><p>自定义域名是用来加速的，这里写的是：<a href="https://cdn.staticaly.com/%E5%90%8D%E5%AD%97/%E4%BB%93%E5%BA%93@main">https://cdn.staticaly.com/名字/仓库@main</a></p><p>Github图床的配置已经设置好了，直接把图片上传上去，复制链接到Markdown编辑器上就可以看到图片了。</p><p>还有更多其他平台可以设置，Github用着暂时没问题，如果出现问题再换个平台。</p><h3 id="三、遇到的坑"><a href="#三、遇到的坑" class="headerlink" title="三、遇到的坑"></a>三、遇到的坑</h3><p>1.出现以下情况</p><p><img src="https://picgo.symbol.cloudns.be/img/picgo%E5%87%BA%E9%94%99.png"></p><p>这是因为打开了fast-github,导致的错误，把fast-github关闭即可。</p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picgo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wiki知识图库搭建</title>
      <link href="/wenzhang/wiki%E7%9F%A5%E8%AF%86%E5%9B%BE%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA-win10/"/>
      <url>/wenzhang/wiki%E7%9F%A5%E8%AF%86%E5%9B%BE%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA-win10/</url>
      
        <content type="html"><![CDATA[<h2 id="第一步、下载PhPstudy"><a href="#第一步、下载PhPstudy" class="headerlink" title="第一步、下载PhPstudy"></a>第一步、下载PhPstudy</h2><p>浏览器输入phpsduty</p><p>或者打开：(<a href="https://www.xp.cn/download.html">https://www.xp.cn/download.html</a>)</p><p>下载对应的版本，64位系统就下载64位的。</p><h2 id="第二步、下载Wiki"><a href="#第二步、下载Wiki" class="headerlink" title="第二步、下载Wiki"></a>第二步、下载Wiki</h2><p>打开github:    (<a href="http://www.github.com/">www.github.com</a>)</p><p>搜索：Wikitten，选择 devaneando&#x2F;Wikitten。</p><p>找到Release或者Tags,下载V1.1.0版本，这个版本比较稳定。</p><h2 id="第三步、安装phpstudy"><a href="#第三步、安装phpstudy" class="headerlink" title="第三步、安装phpstudy"></a>第三步、安装phpstudy</h2><p>点击安装即可,默认是安装在D:\phpstudy_pro。不需要更改。</p><h2 id="第四步、设置phpstudy"><a href="#第四步、设置phpstudy" class="headerlink" title="第四步、设置phpstudy"></a>第四步、设置phpstudy</h2><p><img src="https://picgo.symbol.cloudns.be/img/image-20221003165811877.png"></p><p>点击一键启动中的切换，把Web切换成Apache2.4.39 ,点击确定</p><h5 id="点击软件管理，找到PHP，选择对应的版本，点设置。我这里是php7-3-4nts"><a href="#点击软件管理，找到PHP，选择对应的版本，点设置。我这里是php7-3-4nts" class="headerlink" title="点击软件管理，找到PHP，选择对应的版本，点设置。我这里是php7.3.4nts"></a>点击软件管理，找到PHP，选择对应的版本，点设置。我这里是php7.3.4nts</h5><p><img src="https://picgo.symbol.cloudns.be/img/image-20221003170148716.png"></p><h5 id="其他的可以不用设置了，回到首页，点击WNMP启动"><a href="#其他的可以不用设置了，回到首页，点击WNMP启动" class="headerlink" title="其他的可以不用设置了，回到首页，点击WNMP启动"></a>其他的可以不用设置了，回到首页，点击WNMP启动</h5><h2 id="第五步、测试环境"><a href="#第五步、测试环境" class="headerlink" title="第五步、测试环境"></a>第五步、测试环境</h2><p>在浏览器中输入 localhost,可以看到站点建立成功。</p><h2 id="第六步、把Wiki配置到phpsduty中"><a href="#第六步、把Wiki配置到phpsduty中" class="headerlink" title="第六步、把Wiki配置到phpsduty中"></a>第六步、把Wiki配置到phpsduty中</h2><p>解压下载好的Wikitten-1.1.0,把整个目录下的文件，覆盖到D:\phpstudy_pro\WWW 目录下。原有的文件，删除即可。</p><p><img src="https://picgo.symbol.cloudns.be/img/image-20221003171022216.png"></p><p>复制一份config.php-example为config.php.打开config.php，可以对配置文件进行编辑。</p><p>一般打开允许在线编辑：define(‘ENABLE_EDITING’, true);</p><p>具体的功能，同英文的意思一样。</p><p>再次在浏览器打开：localhost ,即可看到整个目录。</p><h5 id="到这里，整个配置就完成了，还有两个注意点。"><a href="#到这里，整个配置就完成了，还有两个注意点。" class="headerlink" title="到这里，整个配置就完成了，还有两个注意点。"></a>到这里，整个配置就完成了，还有两个注意点。</h5><h3 id="注意点1"><a href="#注意点1" class="headerlink" title="注意点1"></a>注意点1</h3><p>D:\phpstudy_pro\WWW\library 目录是整个库目录，在此目录下再创建树状结构即可以浏览器端看到相应目录</p><h3 id="注意点2"><a href="#注意点2" class="headerlink" title="注意点2"></a>注意点2</h3><p>要使软件能够打开，后台要运行着phpstudy或者运行相应的服务。</p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> wiki </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过CloudFlare配置图床</title>
      <link href="/wenzhang/%E4%BD%BF%E7%94%A8cloudflare%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A/"/>
      <url>/wenzhang/%E4%BD%BF%E7%94%A8cloudflare%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前用picgo来设置github图床，但是总是出现上传图片失败的情况，下面介绍另外一种配置图床的方式。</p><p>这种方式就是用cloudflare + github仓库</p><h2 id="第一步、注册cloudflare"><a href="#第一步、注册cloudflare" class="headerlink" title="第一步、注册cloudflare"></a>第一步、注册cloudflare</h2><p>官网地址：<a href="https://cloudflare.com/">https://cloudflare.com</a></p><p>注册过程很简单就不介绍了，用邮箱注册就行了。注册完成后，登录上去。</p><h2 id="第二步、与git仓库建立连接"><a href="#第二步、与git仓库建立连接" class="headerlink" title="第二步、与git仓库建立连接"></a>第二步、与git仓库建立连接</h2><p>1、点击Workers和Pages页面</p><p><img src="https://picgo.symbol.cloudns.be/img/add-app.png"></p><p>2、点击创建应用程序，再点击Pages，然后连接到Git</p><p><img src="https://picgo.symbol.cloudns.be/img/connect-git.png"></p><p>3、添加GitHub账户和选择仓库</p><p>如果没有，就需要提前注册和创建</p><p><img src="https://picgo.symbol.cloudns.be/img/world.png"></p><p>选择仓库后，点配置，等几分钟就能自动配置完成了，到这一步设置部分就完成了，接下来就是访问了。</p><p>4、访问图片外链URL</p><p><img src="https://picgo.symbol.cloudns.be/img/page.png"></p><p>点击访问站点，可以访问到自己在cloudflare上的位置，但此时无法访问到对应的图片，因为要加上图片路径才能访问。</p><p>比如示例中图片是存放在PicGo仓库，PicGo仓库中有个img文件夹，所有图片都放在这个文件夹内。</p><p><img src="https://picgo.symbol.cloudns.be/img/img-test.png"></p><p>所以正确访问方式就是：<code>&lt;自己的站点 + 图片的路径&gt;</code></p><p>比如我想访问img文件夹下面的1.png，那么URL就是：<code>&lt;https://picgo.symbol.cloudns.be/img/1.png&gt;</code></p><p>5、新增图片</p><p>后续只需要将图片放到github仓库中，cloudflare会自动同步过去。如果发现没有同步过去，只需要等一分钟左右就好了，同步要也时间。有了图片外链，写文档，写博客就方便很多啦。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符集讲解</title>
      <link href="/wenzhang/%E5%AD%97%E7%AC%A6%E9%9B%86%E8%AE%B2%E8%A7%A3/"/>
      <url>/wenzhang/%E5%AD%97%E7%AC%A6%E9%9B%86%E8%AE%B2%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="字符集讲解"><a href="#字符集讲解" class="headerlink" title="字符集讲解"></a>字符集讲解</h2><p>电脑显示文字，涉及到三个重要的概念：字符、字符集，和字符编码。</p><p>一个汉字、一个拉丁字母、一个数字，世界上各种语言里的“字”和“标点符号”，都属于<strong>“字符”</strong>。一堆字符组成的集合，叫做<strong>“字符集”</strong>。</p><p>人类世界有海量的字符，它们原本都写在纸上，甚至刻在石头上。而所有这些字符，计算机……一个都不认识。</p><p>你肯定知道，计算机只认二进制，只能以比特的形式记录“0”和“1”。为了让计算机“识字”，我们就需要把这些字符用 0 和 1 表示出来。把字符转换成 0 和 1 的规则，叫做<strong>“字符编码”</strong>。</p><p>那么，怎么给字符编码，把它们变成0和1呢？</p><p>很简单：我们可以选定一个字符集，让字符们“排排坐”，再把“座位序号”转换成二进制——这个“座位序号”叫做<strong>“码位”</strong>，座位的总数叫做<strong>“码空间”</strong>。码空间越大，字符集就越大。</p><p>比如世界上如果只有“柴”“知”“道”这三个字的话，那我们就可以把“柴”编码为00，“知”编码为01，“道”编码为10。这样计算机一看到这些编码，就知道要显示哪个字了。</p><p>在现实世界中，计算机存储数据的基本单位是“字节”，也就是Byte。一个字节，由 8 个二进制位组成，也就是 8 个比特（bit）。每个比特有 0 和 1 两种状态，8个比特一共有 2^8 个，也就是 256 种不同的状态。</p><p>所以如果只用一个字节长度来编码字符，那么这个字符集就能容纳 256 个字符。</p><p>听起来很少对不对？但对于英文来说已经够了，反正他们一共只有 26 个英文字母嘛~</p><p>所以在上世纪 60 年代，美国人先搞出了“美国信息交换标准代码”，简称  ASCII 。ASCII 总共收录了 128 个字符，包括大小写拉丁字母、数字、常用标点，以及像 ESC、换行这种看不见的控制字符。</p><p>到此为止，事情都很简单：无非就是给这 128 个字符按照顺序排号，再把序号转换为二进制数字。需要显示的时候，从计算机存储的 ASCII 字符集中按编号调用字符，就能在屏幕上显示出来。</p><p>一个字符集，对应一个编码规则，不会出错，一切都很清晰，简单，完美。</p><p>但所有的完美都是易碎的。这世界上远远不止英文一种语言，当各国都要跑步进入信息化社会的时候，文字显示的“乱纪元”就开启了。</p><p>刚才说过，用一个字节编码字符，最多能容纳256个码位。英语一共才那么点字符，256 个码位用完都还剩一半。所以西欧一些国家，就搞了“扩展美国信息交换标准代码”，EASCII，也就是用剩下的这 128 个空位，来表示其他的字符：比如上方有注音符号的法语字母，西班牙语里的特殊标点，数学上常用的 α、β 等希腊字母，以及一大堆特殊符号等等。</p><p>这时候，问题就已经开始冒头了：</p><p>各国搞的 EASCII 字符集和编码，后面 128 个字符都不太一样，一共搞出了 200 多种 EASCII ，互不兼容。就算是同样一串二进制数，在不同的 EASCII 中对应的字符也不同。所以同一份文本哪怕放到不同语言的计算机中打开，都可能会出现“乱码”。</p><p>这还算好的。因为当信息高速公路修到中、日、韩等国家和地区时，就要面临一个更复杂的问题：汉字。</p><p>汉字的历史源远流长，总数量那可太多了。我国 1980 年公布的《GB 2312-80 信息交换用汉字编码字符集 基本集》，就包含了 6763 个常用简体汉字，以及一些标点、符号、数字、拉丁字母等。</p><p>那很显然， 1 个字节长度最多只能编码 256 个字符，对汉字来说根本不够用。所以 GB 2312 用两个字节长度，来编码一个字符，这样理论上就可以容纳 2^16 个，也就是 65536 个字符。现在输入法里的全角标点符号就是用两个字节编码的，而半角标点符号，就是用一个字节编码的。</p><p>不过，GB 2312-80 字符集里这六千多个汉字，只是最最常用的汉字，其实根本不够用，比如像“喆”，“頫（fǔ）”，“旻（mín）”，“祎（yī）”这些人名中的常见字甚至都不包括在内。</p><p>那字符集里没有的那个字怎么办呢？那就打不出来。</p><p>所以在过去，如果你叫“张𬀩”的话，那对不起，办不了证，只能改名了。</p><p>在 2009 年，广州番禹（ pān yú ）的一个村子，就因为村名中有一个电脑打不出来的生僻字，不得已更名，这才为全村村民办下来了第二代居民身份证。</p><p>而在今天，更新的字符集已经包含了这些生僻字。但虽然能打出来，却也经常显得“孤寡”。</p><p>因为绝大多数简体汉字字体，都还是只适配了 GB 2312 里的这六千多个常用汉字。比如最常见的公文字体之一「仿宋 GB2312」，意思就是说我只设计了 GB 2312 字符集中的字符。</p><p>那如果你的名字生僻一点，不在这个字符集中，那么计算机要么调用其他字体来显示，要么直接给你显示成个框框。总之就是显得格格不⼊。</p><p>这还不算完。因为汉字有简体，有繁体，而且虽然起源于中国，但远不止中国一家用。日本用日本汉字、韩国用朝鲜汉字，大家都搞出了自己的字符集和编码规则，都优先考虑本地人使用方便，相互之间的兼容性很差。</p><p>后来微软被逼急了，就根据各地字符集和字符编码，自己扩展了 GB 2312 字符集，加入了一些繁体汉字，这份扩展的字符集后来成为了“汉字内码扩展规范 GBK”，这里的 K 就是“扩展”的意思。</p><p>不过，GBK 并不是国家标准，只是一个普通的技术规范，这种缝缝补补又三年的打补丁操作，又成为了后续一大堆乱码的来源之一。你继续往后看就知道了~</p><p>总而言之，随着计算机在全球迅速普及，各种字符编码已经乱得不能再乱了。人类早晚要解决这个问题，而摆在面前的方案有两种：</p><p>第一，<em>（怒拍核按钮，原子弹爆炸的片段）</em>。整个世界清静了，让一切归零从头再来，“书同文，车同轨”。</p><p>当然，这个方案的代价稍微有那么亿丢丢大了。所以人类略微思考了一下，还是选择了第二种比较温和的方案：</p><p>我们搞一个超~~级大的字符集，囊括人类世界所有的字符，然后编码出来，供全世界使用，这不就搞定了？</p><p>这个超级大的字符集，人类文字编码届的巴别塔，就是 Unicode，中文名叫“统一码”。</p><p>Unicode 野心很大，它一上来就收录了 25 种文字，两万八千多个字符，其中就包含了 GB 2312 中的六千七百多个简体字。</p><p>为了收纳这么多字符，Unicode 决定以「书写系统」为标准来分类和收录字符。</p><p>这什么意思呢？像英语、德语、法语、西班牙语……都属于同一套「书写系统」——拉丁字母。虽然拉丁字母里的“o”，和西里尔字母“о”，以及希腊字母“ο”，长得几乎一样，但既然属于三个不同的书写系统，而且过去各地都已经搞出了相应的字符编码，为了兼容性，就需要安排三个不同的码位。</p><p>至于我们中国的简体字、繁体字，以及日本汉字、朝鲜汉字等，则被归纳为「中日韩统一表意文字」。由于一些汉字在各地都用，只是长得略微有点区别，为了节省码位，Unicode 就让这些字共用一个码位。</p><p>Unicode 的这种分类收录方式，愿望是好的，但坑也是挖了不少的。</p><p>比如这串网址，它看上去是苹果公司的官网，但这个字母，根本不是拉丁字母 a，而是西里尔字母。所以用这种方法，就可以轻而易举制作出钓鱼网站，诱骗你的帐号和密码。</p><p>这些钓鱼网站，用的都是同一套手法~</p><p>在汉字世界，也有人利用 Unicode 玩出了类似的花招：</p><p>Unicode 中，收录了 214 个康熙部首。你看，它们跟普通汉字长得几乎一模一样。</p><p>当初 Unicode 收录这些康熙部首，是为了方便词典和输入法能给汉字排序，并跟中国台湾的「中文标准交换码」兼容。当年就有人担心，这些部首跟常用汉字长得太像，可能会出显示问题。于是 Unicode 把它们列为了“兼容字符”，这样在正常情况下，用户很难输入这些部首。</p><p>但人类的聪明才智是用不完的。视频开头的这手花活，就是利用康熙部首的“⼊”，替换了正常的“入”。</p><p>当然，绝大多数中文字体都没有闲工夫去适配这些康熙部首。所以你换个字体试一下，就会发现它露馅了。</p><p>在诞生后的这些年里，Unicode 一直在不断地更新、扩展，尽力容纳人类世界的所有字符。如今它已经有了 1114112 个码位，并平均划分成 17 个平面，每个平面都有 65536 个码位。在单个平面上，再根据具体的用途划分出“区块”。“区块”相当于把同类字符放到一起，以方便检索和补充。</p><p>GB 2312 中的六千七百多个常用的简体字，一大堆你不认识的汉字，陕西biangbiang面的biang，你用的 emoji 表情，都已经被收纳进了 Unicode 字符集中。其中甚至还有为各个国家、地区、甚至企业准备的“私用区”，可以供大家自定义使用。像苹果就把自己的logo放进了私用区，只有用 macOS、iOS 等苹果操作系统的朋友才能看见这个字符，而 Windows 和 Android 拒绝显示。</p><p>《星际迷航》的粉丝们，还把克林贡文字放进了私用区，只要你装了这些相关的软件和字体，就能输入和显示克林贡语。</p><p>如今，大一统的 Unicode 已经成为了计算机科学领域最常用的字符集。但是，文字显示的“乱纪元”并没有随着 Unicode 的出现而结束……</p><p>Unicode 虽然号称“统一码”，但一统江湖哪有这么简单？毕竟各个国家都有各个国家的具体情况啊。</p><p>作为一个超级庞大的字符集，Unicode 也需要让这些海量的字符“排排坐”，然后进行编码，转换成二进制的 0 和 1。曾经大多数字符集，都只有一种编码方式。而超级无敌大的 Unicode 字符集，有很多种编码方式，你在一些文档软件里看到的 UTF-8，UTF-16，UTF-32 等，都是把 Unicode 字符集中的字符，转换成二进制信息的编码方式。</p><p>目前最常用的，是 UTF-8 编码。我国一些政府机关进行信息化建设时，也会要求文档应使用 UTF-8 编码存储。</p><p>编码很重要。因为即使是同一串二进制数字，在不同的字符集和编码方式下，也会对应不同的字符。所以如果用错误的编码打开文本，乱码就来了。</p><p>你还记得之前讲到的，微软为了容纳各种汉字搞出来的 GBK 字符集和编码吧？在中文世界里，GBK 和 Unicode，都有很多的使用者。</p><p>当 GBK 与 Unicode 激情碰撞之后，噩梦般的上古神器——“锟（kūn）斤拷”就诞生了。</p><p>你看啊，当你写出这段文字，点击保存，此时它们就被按照 GBK 编码存储成了这串二进制数字。</p><p>然后你把这份文档发给了心爱的人，她用最常见的 UTF-8 编码打开。此时软件就懵逼了，因为它会发现这些东西根本无法正常显示。</p><p>此时，Unicode 就会用这个替换符号�，来展示所有无法正确显示的字符。</p><p>这时她也懵逼了~心想算了，保存一下发给室友让她帮忙打开吧。在她点击保存的那一瞬间，文档中所有的�字符，就被根据 UTF-8 编码，编码为了 0xEF BF BD。</p><p>而收到这份文件的大冤种室友，再次使用 GBK 编码打开了这份文档。此时根据 GBK 编码规则，如果有连续两个问号，那么 EFBF、BDEF、BFBD 这三个码位对应的，正是“锟斤拷”三个字。也就是说，连续两个问号，就对应了一个“锟斤拷”，一串问号，就对应了满屏的“锟斤拷”。</p><p>经过这套行云流水的操作，你的爱已经完全找不回来了，坍缩成了无穷无尽的“锟斤拷”。</p><p>在中文世界里，GBK 编码和 Unicode 都非常常见，比如 Win 7、Win 8、以及 Win 10 较早期的中文版中，它们自带的记事本用的就是所谓的 ANSI 编码。ANSI 在不同语言系统中所代指的实际编码不同，在简体中文系统中，它就是 GBK 编码。而 Mac 上的“文本编辑”，以及一大堆其他软件，默认用的是 UTF-8 编码。所以你一不小心，就能搞出一份乱码文件。以至于像 Word 这样的软件都学刁了，还经常会在打开时让你玩猜猜看，请你猜一猜，这份文档到底是什么编码呀~</p><p>而“锟斤拷”还不是最离谱的。我们可以给你展示一个更灵异的现象：</p><p>没错，你拿一台安装了Win 7 的电脑，也可以轻松地重现这个 bug。</p><p>当你敲下“联通”两个字时，它就被记事本按照默认的 GBK 编码，编成了这串二进制数字。</p><p>而当你再次打开它时，记事本会觉得，哎？这串二进制数字的开头，长得跟UTF-8编码的文件很像嘛！这题我会！</p><p>于是就用 UTF-8 编码打开了它，显示出乱码。这就是灵异事件的由来。</p><p>好了，这个关于文字显示和乱码的长长的故事，总算可以告一段落了。</p><p>其实现在，乱码的情况已经比之前少了很多。随着 Unicode 这座现代的巴别塔越盖越高，采用它的软件也越来越多，如今新版的 Windows 系统已经把记事本的默认编码改成了 UTF-8 。很多常用软件也做了一些应对，尽量避免乱码。</p><p>但在地球各地，还存在很多老设备，老软件，你不知道里面装着什么样的字符集，用着哪些编码。每一次乱码，都是过去与现在，此处和彼处的隔空对撞，你就当它们是错综复杂的计算机技术发展史，给我们放的一朵朵大烟花吧~</p><p>当然，你如果特别烦乱码，觉得所有现有的方案都不够好……..那其实也有别的解决方案，你应该记得吧，我们刚不是说了吗？</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><ol><li><strong>关于“𬀩”字</strong></li></ol><p>音 wěi，Unicode 码位 U+2C029，位于 SIP，“中日韩统一表意文字扩展区 E”，来自《现在汉语词典》。</p><ol><li><strong>关于“táng 闾巷” 的“táng”字</strong></li></ol><p>如下图。Unicode 码位 U+28D88，位于“中日韩统一表意文字扩展区 B”，有“高门”之意。</p><p><img src="https://u0y2lvcc3a.feishu.cn/space/api/box/stream/download/asynccode/?code=YzE0NWI2YTgwNzYyMmM1MTZjMTMwNTU5NDFmNmI2MzhfNnZNdDdzTUZrRXFtQ004UGx1SjBCS2ZxTUtlZzF6WklfVG9rZW46Ym94Y25kVjk0WklYbjdwTEljOWU1T1NRdkFoXzE2NjU3MzY1MTg6MTY2NTc0MDExOF9WNA" alt="img"></p><ol><li><strong>关于 Unicode</strong></li></ol><p>通常我们说 Unicode 都是指“Unicode 标准”，英文为 Unicode Standard，它是由 Unicode 联盟制定的。Unicode 联盟是民间组织，成员为大型商业公司，比如微软、苹果、华为等，以及相关领域的专家和学者。因此，由 Unicode 联盟制定出来的 Unicode 标准在政治层面实质上并不具备强制性。</p><p>各国、地区的官方标准则是根据 ISO&#x2F;IEC 10646 来制定的。ISO&#x2F;IEC 10646 跟 Unicode 标准区别不大，码位完全一致，二者几乎可以划等号，只是面向的对象不同。</p><ol><li><strong>ASCII 与 EASCII</strong></li></ol><p>ASCII 是只有 128 个字符，8 位是能表示 256 个字符的。所以 ASCII 二进制的首位默认是 0。后来 EASCII 的首位都是 1。</p><p>ASCII 拉丁字母部分码位设计得特别巧妙。二进制情况下，大小写转换非常方便，只需看（从右往左）第六位数字即可，0 是大写，1 是小写。比如，“0100 0001”是 A，“0110 0001”是 a。</p><ol><li><strong>GB 2312-80 是否为国家强制标准？</strong></li></ol><p>《GB 2312-80 信息交换用汉字编码字符集 基本集》（GB 2312-80）于 1980 年公布，并于 1981 年 5 月 1 日正式实施，当时为国家强制标准。</p><p>根据我国国家标准公告（2017 年第 7 号）和强制性标准整合精简结论，这一标准自 2017 年 3 月 23 日起转化为推荐性标准。现应为“GB&#x2F;T 2312-80”</p><ol><li><strong>什么是“书写系统”？</strong></li></ol><p>在 Unicode 标准中，书写系统的定义有两个。在「6.1 Writing Systems」开头，给出了两个定义：</p><blockquote><p>The term writing system has two mutually exclusive meanings in this standard. As used in this section, “writing system” refers to a way that families of scripts may be classified by how they represent the sounds or words of human language. For example, the writing system of the Latin script is alphabetic. In other places in the standard, “writing system” refers to the way a particular language is written. For example, the modern Japanese writing sys- tem uses four scripts: Han ideographs, Hiragana, Katakana and Latin (Romaji).</p></blockquote><p>简单来说，第一种是整个 6.1 章节中用的，大概是说「表音文字」「表意文字」这种划分方式。</p><p>第二种是标准其他地方这个术语的定义，就是正文中用的「一种特定语言的书写方式」。比如，现代日语有四种书写方式：汉字、平假名、片假名和拉丁文。</p><ol><li><strong>Emoji 冷知识</strong></li></ol><p>Emoji 最早只是移动运营商，以及聊天软件们自己开发的。后来随着使用人数越来越多、范围越来越广，微软、苹果、谷歌这些跨国巨头们，向 Unicode 提案，将 emoji 正式加入 Unicode 字符集中，安排在 SMP 中。</p><p>值得一提的是，由于 Unicode 只规定 emoji 的含义，不管它们具体长啥样，所以决定你看到的 emoji 长啥样的，是字体。不同操作系统和平台上，使用的 emoji 字体不同，所以你看到的表情符号也不一样。比如， Mac、iPhone上的手机、手表、键盘、鼠标等 emoji 长得都是自家产品的样子，而在 Windows 上就朴实无华得多。</p><p>在 Unicode 14.0 中，总共收录了几千个 emoji，包括这些你熟悉的表情，以及不同肤色、发色的人物，各国家的地区的旗帜，各种性别组成的家庭等等。照这个趋势，也不知道 Unicode 未来会不会再收录五口之家、六口之家的 emoji</p><p>有趣的是，其实这些家庭无论怎么加，其实并不会单独占用 Unicode 码位，它们是用已经存在的 Emoji 组合起来的。比如这个“凑成一个‘好’字”的四口之家👨👩👧👦，就是由男人👨、女人👩、女孩👧、男孩👦这四个单独的 emoji“拼”起来的。</p><p><img src="https://u0y2lvcc3a.feishu.cn/space/api/box/stream/download/asynccode/?code=NmQzMzU2ZDA1MzU4ZDdhNTJjODY1N2Y3MTZlZTIyMTRfaXBmVUFPMEhrY0xiV1VCRlpObnpLNVFDMWFwZnFtZXpfVG9rZW46Ym94Y25ZcWlwYUZXT250Y1RQOGdFc0RGRXpoXzE2NjU3MzY1MTg6MTY2NTc0MDExOF9WNA" alt="img"></p><p>再比如各种旗帜，目前 Unicode 共由两百六十多面国家和地区的旗帜，但其实总共只占用了几十个码位。Unicode 这是因为 Unicode 中有一组专门用于表示旗帜的特殊拉丁字符，用来表示国家的英文缩写。比如“中国”的英文缩写为“CN”，就用 U+1F1E8、U+1F1F3 这两个特殊字母组合起来，代表中国国旗，然后再由字体具体实现这面国旗长什么样。</p><ol><li><strong>Unicode 平面</strong></li></ol><p>在 Unicode 目前的 17 个平面中，只用到了 7 个平面，其他 10 个平面还没有规划。</p><p>其中 GB 2312 中的六千七百多个简体字，位于基本多文种平面 BMP 。这个平面收录的是全人类最常用的字符，历史最为悠久，所以计算机系统、软件、字体等对 BMP 平面内的字符支持最为完整。</p><p>所以，BMP 平面上每一个码位都十分珍贵，只有特别重要的字符才能得到这个平面的码位。比如中国就在 2018 年往里面加入了三个新的化学元素用字。</p><p>目前 BMP 平面已经基本被塞满，只剩下 16 个码位空余。</p><h2 id="部分翻译对照"><a href="#部分翻译对照" class="headerlink" title="部分翻译对照"></a>部分翻译对照</h2><ul><li><p>字符 - Character</p></li><li><p>字符集 - Character Set</p></li><li><p>字符编码 - Character Encoding</p></li><li><p>字体 - Font</p></li><li><p>字形 - Glyph</p></li><li><p>码位 - Code Point</p></li><li><p>码空间 – Code Space</p></li><li><p>乱码 - Mojibake</p></li><li><p>替换符号 - Replacement Character</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用CMD命令</title>
      <link href="/wenzhang/%E5%B8%B8%E7%94%A8CMD%E5%91%BD%E4%BB%A4/"/>
      <url>/wenzhang/%E5%B8%B8%E7%94%A8CMD%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>测试网络连通情况：</p><p><code>ping IP地址</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ping 参数：</span><br><span class="line">-l 数据包大小</span><br><span class="line">-t 一直ping</span><br><span class="line">-n ping 的次数</span><br></pre></td></tr></table></figure><p>查看路由追踪表：</p><p><code>tracert IP</code></p><p>比如：<code>tracert www.baidu.com</code></p><p>打开系统引导项：</p><p><code>msconfig</code></p><p>查看本机IP地址：</p><p><code>ipconfig</code></p><p><code>ipconfig /all</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">netsh 简单使用</span><br><span class="line">查看连接过和wifi密码：</span><br><span class="line">CMD下输入netsh,回车，</span><br><span class="line">列举连接过的wifi：wlan show profiles</span><br><span class="line">查看某个wifi密码：wlan show profiles &quot;wifi名称&quot; key=clear</span><br><span class="line">--------------------------</span><br><span class="line">静态IP和动态IP随时切换</span><br><span class="line">建立一个static.cmd文件，用文件保存的好处是可以一次性更改。</span><br><span class="line">static.cmd写入：</span><br><span class="line">netsh interface ip set address &quot;要修改的网卡名称&quot; static 192.168.0.100 255.255.255.0 192.168.0.1 1</span><br><span class="line">建立dhcp.cmd 写入：</span><br><span class="line">netsh interface ip set address &quot;要修改的网卡名称&quot; dhcp </span><br><span class="line">ipconfig /release</span><br><span class="line">ipconfig /renew</span><br><span class="line">双击运行即可。</span><br></pre></td></tr></table></figure><p>跳转特定目录：</p><p><code>先进入要跳转的目录，在路径栏上直接输入 cmd 即可</code></p><p>打开记事本：</p><p><code>notepad</code></p><p>打开画图：</p><p><code>mspaint</code></p><p>打开计算器：</p><p><code>calc</code></p><p>打开字符映射表：</p><p><code>charmap</code></p><p>打开注册表</p><p><code>regedit.exe</code></p><p>查看windows版本</p><p><code>winver</code></p><p>打开控制面板</p><p><code>control</code></p><p>打开DVD播放器：</p><p><code>dvdplay</code></p><p>exe程序开机自启动：</p><p>win+R,输入：</p><p><code>shell:startup</code></p><p>将快捷方式或者文件放进去即可。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMD命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将markdown转为html</title>
      <link href="/wenzhang/%E5%B0%86markdown%E8%BD%AC%E4%B8%BAhtml/"/>
      <url>/wenzhang/%E5%B0%86markdown%E8%BD%AC%E4%B8%BAhtml/</url>
      
        <content type="html"><![CDATA[<h2 id="使用npm的i5ting-toc插件把md文档转换为html文件"><a href="#使用npm的i5ting-toc插件把md文档转换为html文件" class="headerlink" title="使用npm的i5ting_toc插件把md文档转换为html文件"></a>使用npm的i5ting_toc插件把md文档转换为html文件</h2><p><strong>第一步</strong>、安装npm,（安装node.js会自带npm）</p><p><strong>第二步</strong>、执行安装命令： <strong>npm install i5ting_toc -g</strong> </p><p><strong>第三步</strong>、在md文档所在目录，用PowerShell打开，输入：</p><p><strong><code>i5ting_toc.cmd -f &lt;要转换的文档.md&gt;</code></strong></p><p>执行完成后，在文档所在目录，会生成<strong>preview</strong>文件夹，转换后的<strong>html</strong>文件就在这个文件夹内</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过Alist将过网盘挂载到本地</title>
      <link href="/wenzhang/%E5%B0%86%E7%BD%91%E7%9B%98%E6%8C%82%E8%BD%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/"/>
      <url>/wenzhang/%E5%B0%86%E7%BD%91%E7%9B%98%E6%8C%82%E8%BD%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要将网盘挂载到本地"><a href="#为什么要将网盘挂载到本地" class="headerlink" title="为什么要将网盘挂载到本地"></a>为什么要将网盘挂载到本地</h2><p>将网盘挂载到本地的好处：</p><p>访问网盘就像访问本地文件夹一样方便，网盘上的文件无需下载就能直接访问。比如mp4视频，直接可以用电脑上的播放器打开。比如office安装包，直接安装，无需下载。用一句话总结就是：将网盘变成本地硬盘。</p><h2 id="如何挂载"><a href="#如何挂载" class="headerlink" title="如何挂载"></a>如何挂载</h2><p>需要用到两个软件：Alist 和 RaiDrive</p><p>Alist负责将网盘上的文件，映射到本地某个端口，可以用浏览器访问。</p><p>RaiDrive负责本该是浏览器访问的网盘，映射到本地，可以在本地直接访问。</p><p>注意点：Alist 和 RaiDrive这两个软件，需要打开，才能正常使用，如果关闭，则不能访问。 </p><p>软件安装包：</p><p>蓝奏云：<a href="https://wws.lanzoul.com/iDuTi0dq77ji">https://wws.lanzoul.com/iDuTi0dq77ji</a><br>                密码:7027</p><hr><p>百度网盘： <a href="https://pan.baidu.com/s/1RY6QnQS9Y1FlsntWCa3Cww?pwd=4wyn">https://pan.baidu.com/s/1RY6QnQS9Y1FlsntWCa3Cww?pwd=4wyn</a> </p><p>提取码: 4wyn </p><h2 id="可以挂载哪些网盘"><a href="#可以挂载哪些网盘" class="headerlink" title="可以挂载哪些网盘"></a>可以挂载哪些网盘</h2><p>支持的网盘：百度网盘，阿里云盘，OneDrive，天翼云盘，蓝奏云，123云盘，谷歌云盘，夸克网盘，迅雷网盘等等。</p><p>支持的非常多，一定支持你要挂载的云盘。</p><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>将下载好的RaiDrive进行安装，安装过程中，需要一些库的支持，一并安装就好了。</p><p>Alist不需要安装，直接以管理员的身份运行即可。</p><h2 id="第一步、运行Alist"><a href="#第一步、运行Alist" class="headerlink" title="第一步、运行Alist"></a>第一步、运行Alist</h2><p>右键以管理员的身份运行</p><p><img src="https://picgo.symbol.cloudns.be/img/alist%E9%A1%B5%E9%9D%A2.png"></p><p>并记住初始登录密码，等下登录需要用到。</p><p>在浏览器输入下面网址，访问Alist后台。</p><p><strong><a href="http://127.0.0.1:5244/">http://127.0.0.1:5244</a></strong></p><p>首次登录需要密码，填入刚才记录的初始密码。</p><h2 id="第二步、设置Alist"><a href="#第二步、设置Alist" class="headerlink" title="第二步、设置Alist"></a>第二步、设置Alist</h2><p>进入后台，显示的页面如下</p><p><img src="https://picgo.symbol.cloudns.be/img/Alist%E9%A1%B5%E9%9D%A22.png"></p><p>点击左边的账号，再点击添加。</p><h6 id="添加的时候，选择一个网盘，比如选择阿里云盘。虚拟路径，填写一个电脑上没有的盘符，比如：E，F，G，H，I等等都可以。不要填本地电脑上已有的盘符。"><a href="#添加的时候，选择一个网盘，比如选择阿里云盘。虚拟路径，填写一个电脑上没有的盘符，比如：E，F，G，H，I等等都可以。不要填本地电脑上已有的盘符。" class="headerlink" title="添加的时候，选择一个网盘，比如选择阿里云盘。虚拟路径，填写一个电脑上没有的盘符，比如：E，F，G，H，I等等都可以。不要填本地电脑上已有的盘符。"></a>添加的时候，选择一个网盘，比如选择阿里云盘。虚拟路径，填写一个电脑上没有的盘符，比如：E，F，G，H，I等等都可以。不要填本地电脑上已有的盘符。</h6><p><img src="https://picgo.symbol.cloudns.be/img/%E4%BB%A4%E7%89%8C.png"></p><p>添加的时候，重点是要获得到一个令牌。</p><p>访问Alist官方文档，查看获取令牌的方法：</p><p><strong><a href="https://alist-doc.nn.ci/docs/driver/aliyundrive/">https://alist-doc.nn.ci/docs/driver/aliyundrive/</a></strong></p><p>点击<strong>Get Token</strong></p><p><img src="https://picgo.symbol.cloudns.be/img/%E8%8E%B7%E5%BE%97%E4%BB%A4%E7%89%8C.png"></p><p>不同网盘获取令牌的方式可能略有不同，阿里云盘需要用手机端App扫码。</p><p>总之能获得到就行，这里的令牌，相当于是要绑定自己的账号，如此才能访问到自己的网盘。</p><p>复制到令牌后，粘贴到上上图中刷新令牌的位置。然后点击保存即可。</p><p>到这一步就添加好了，可以通过浏览器来访问自己的网盘了。</p><p>打开：<code>http://127.0.0.1:5244</code></p><p>这一步要能访问到自己的网盘，再进行下一步。下一步就是设置在本地访问网盘中的文件。</p><h2 id="第三步、运行RaiDrive"><a href="#第三步、运行RaiDrive" class="headerlink" title="第三步、运行RaiDrive"></a>第三步、运行RaiDrive</h2><p>添加 <code>+Add</code>，添加一个网盘，然后填写配置。</p><p><img src="https://picgo.symbol.cloudns.be/img/rai.jpg"></p><p>图片中的 Account，如果是中文，则会显示账户。</p><p>这里填写自己Alist后台中的 </p><p><code>WebDav username和WebDav password</code></p><p>每个人都是不一样的。</p><p>最后点击<strong>连接</strong>就行了。</p><p>至此大功告成了，就可以在自己的电脑上访问网盘中的内容了。</p><p><img src="https://picgo.symbol.cloudns.be/img/OK.png"></p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>一、<strong>只有Alist和RaiDrive运行，才能正常访问。并且是先以管理员身份运行Alist,再运行Raidrive</strong></p><p>二、当需要访问网盘的时候，运行即可，如果网盘中文件太多，同步网盘可以需要花点时间。</p><p>三、电脑必须连上网，才能正常映射。自己的电脑如果没网，也是访问不到网盘的，这是同一个道理。</p><p>四、其他网盘的添加方法类似，就是在添加时改一下网盘类型，虚拟路径不要重复，然后获取到令牌即可。</p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Alist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机安装Centos系统</title>
      <link href="/wenzhang/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Centos%E7%B3%BB%E7%BB%9F/"/>
      <url>/wenzhang/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Centos%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机安装Centos系统"><a href="#虚拟机安装Centos系统" class="headerlink" title="虚拟机安装Centos系统"></a>虚拟机安装Centos系统</h1><h3 id="第一步、安装虚拟机软件"><a href="#第一步、安装虚拟机软件" class="headerlink" title="第一步、安装虚拟机软件"></a>第一步、安装虚拟机软件</h3><p>这里用的是<code>VMware</code>，直接去百度或者谷歌搜索下载安装即可，安装的时候需要用激活码来激活。</p><h3 id="第二步、下载Centos镜像文件"><a href="#第二步、下载Centos镜像文件" class="headerlink" title="第二步、下载Centos镜像文件"></a>第二步、下载Centos镜像文件</h3><p>下载地址：<a href="https://www.centos.org/download/">Download (centos.org)</a></p><p>选择对应的版本下载，这里用的是：<code>CentOS-7-x86_64-DVD-2009.iso</code></p><h3 id="第三步、安装系统"><a href="#第三步、安装系统" class="headerlink" title="第三步、安装系统"></a>第三步、安装系统</h3><p>安装前先要配置硬盘，内存，CPU，网络等硬件信息，再选择系统镜像文件进行安装。安装过程要求输入用户名，密码，选择时区，键盘等信息。跟着安装步骤一步步走就行。</p><p>我这里配置了信息如下：硬盘20G，内存1G，CPU 1核心，网络选择NAT模式。这些配置，在系统成功安装后，也是可以重新设置的。</p><p>重点是网络的选择，一般使用NAT模式或者桥接模式。我这里使用了自定义的NAT模式。</p><p><img src="https://picgo.symbol.cloudns.be/img/vmnet8.png" alt="自定义NAT"></p><p>NAT使用的是本地的VMnet8网卡。</p><p>打开虚拟机菜单栏中的编辑，选择虚拟网络编辑器，查看网卡的一些信息</p><p><img src="https://picgo.symbol.cloudns.be/img/NAT%E8%AE%BE%E7%BD%AE.png" alt="NAT设置"></p><p>子网IP，子网掩码和网关要记住，等一下配置网卡的静态IP需要用到。</p><p>也可以在<code>cmd</code>命令行中查看<code>VMnet8</code>网卡的<code>IP</code></p><p><img src="https://picgo.symbol.cloudns.be/img/cmd.png" alt="NAT设置"></p><p>到这一步，我们知道的网卡信息如下：</p><p>本地的VMnet8 IP是:<code>192.168.119.1</code></p><p>NAT的子网掩码是：<code>255.255.255.0</code></p><p>NAT的网关是：<code>192.168.119.2</code></p><h3 id="第四步、配置网卡地址为静态IP"><a href="#第四步、配置网卡地址为静态IP" class="headerlink" title="第四步、配置网卡地址为静态IP"></a>第四步、配置网卡地址为静态IP</h3><p>默认的是<code>DHCP</code>动态分配，那么为什么要设置静态IP呢？这是为了方便我们用SSH工具去连接，如果不设置静态IP，那么网卡的IP就可能发生变化，SSH的设置就得重新配置，比较麻烦。</p><p>我们先用命令查看网卡名称：<code>ip a</code></p><p>一般有两个名称，一个是<code>lo</code>,本地回环地址；另一个才是我们要修改的网卡，我这里的名称是：<code>ens33</code>。名称有可能会不一样，这都没关系，操作是一样的。</p><p>打开<code>ens33</code>的网卡配置：</p><p><code>vi /etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p>修改如下：</p><p><img src="https://picgo.symbol.cloudns.be/img/ens33%E9%85%8D%E7%BD%AE.png" alt="NAT设置"></p><p>把<code>BOOTPROTO从dhcp，改为static</code></p><p>把<code>ONBOOT=no，改为yes</code></p><p>添加配置信息如上图</p><p><code>GATEWAY,NETMASK,</code>配置为与刚才记录的一样，<code>DNS1</code>配置为网关的地址。</p><p><code>IPADDR</code>在子网范围内随便选一个即可，注意不要与网关和本地的<code>VMnet8</code>相同。</p><p>配置好之后，保存退出，然后重启网卡服务：<code>systemctl restart network</code></p><p>重启完之后再用：<code>ip a </code>命令就可查看到刚才的配置信息。</p><h3 id="第五步、使用SSH工具连接Centos"><a href="#第五步、使用SSH工具连接Centos" class="headerlink" title="第五步、使用SSH工具连接Centos"></a>第五步、使用SSH工具连接Centos</h3><p>这一步比较简单，输入<code>IP</code>地址，用户名和密码等即可。这一步可能会发生错误，连接不上。</p><p>可能原因是系统没有安装ssh服务，解决方法如下：</p><p>安装：<code>yum install openssh-server</code></p><p>安装完成，启动服务，并设置开机启动</p><p>启动：<code>systemctl start sshd</code></p><p>设置开机启动：<code>systemctl enable sshd</code></p><p>ssh默认端口为22，一般不需要修改，如需修改配置，可打开配置文件来修改。</p><p>配置文件路径：<code>/etc/ssh/sshd_config</code></p><p>修改后重新加载：<code>systemctl reload sshd</code></p><h4 id="补充：NAT模式，桥接模式和主机模式，这三者之间的区别。"><a href="#补充：NAT模式，桥接模式和主机模式，这三者之间的区别。" class="headerlink" title="补充：NAT模式，桥接模式和主机模式，这三者之间的区别。"></a>补充：NAT模式，桥接模式和主机模式，这三者之间的区别。</h4><p>首先是桥接模式，这个模式下，本地与虚拟机共用一张网卡，他们之间是平等关系。局域网内的设备也可以访问该虚拟机。</p><p>NAT模式是：主机与虚拟机之间多了一层地址转换，虚拟机网卡与本地网卡IP不在同一网段，从虚拟机访问网络时，IP会转为主机IP来访问。类似于我们平时使用多台设备连接wifi，我们访问外部网络时，我们多台设备的IP地址也会转为同一个公网IP去访问。</p><p>主机模式就是：虚拟机只能跟主机通信，虚拟机访问不了外部网络。</p><p>设置这三种模式是为了不同的网络访问权限。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机思维</title>
      <link href="/wenzhang/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%80%9D%E7%BB%B4/"/>
      <url>/wenzhang/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%80%9D%E7%BB%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机思维"><a href="#计算机思维" class="headerlink" title="计算机思维"></a>计算机思维</h1><p>计算机思维是全方位的，不太可能用一两句话概括。简单地讲，需要处理好这样七对关系</p><h2 id="一、大和小"><a href="#一、大和小" class="headerlink" title="一、大和小"></a>一、大和小</h2><p>相对的大小比绝对的大小更重要。</p><h2 id="二、快与慢"><a href="#二、快与慢" class="headerlink" title="二、快与慢"></a>二、快与慢</h2><p>人的进化是很慢的，每个世纪只有百分之几，总体来讲经济和社会的发懂也是比较慢的，每年最多几个百分点。因此，人本身并不适应非常快速的发展变化。但是计算机本身的发展是18个月翻一番，大约相当于10年增加了100倍，在智能时代，人的思维要适应这种快速变化</p><h3 id="三、多维度与单一维度"><a href="#三、多维度与单一维度" class="headerlink" title="三、多维度与单一维度"></a>三、多维度与单一维度</h3><p>从总体上讲，人脑是线性处理事务的，看问题常常是一外角度，也没有能力把多角度综合起来。但是，计算机有这个能力，因此占到了多维度的便宜。</p><h3 id="四、网络和个体"><a href="#四、网络和个体" class="headerlink" title="四、网络和个体"></a>四、网络和个体</h3><p>人的思维是个体行为，作决定彼此不干扰。这有好的一面。但是也难以集中很多人的智慧，产生叠加的效果。事实上群体智慧的简单叠加甚至不如个人的智慧。但是人工智能是建立 在网络效应基础上的。它是通过很多彼此联系的计算机共同协作工作而产生的。</p><h3 id="五、自顶向下和自底向上"><a href="#五、自顶向下和自底向上" class="headerlink" title="五、自顶向下和自底向上"></a>五、自顶向下和自底向上</h3><p>自顶向下做事这一点是计算机的精髓，而人更适合自底向上。在一个组织内，自底向上的做事方式更容易 激发群体的积极性，但是容易造成资源的浪费。</p><h3 id="六、全局和局部"><a href="#六、全局和局部" class="headerlink" title="六、全局和局部"></a>六、全局和局部</h3><p>人做事情 时，限于自己的认知，通常得到的是局部最佳，失去对全局的优化的可能性。由于计算机有处理大数的能力，以及是自顶向下的做事方式，更容易得到全局最佳。这一点在Alphago和人对弈时表现得淋漓尽致。</p><h3 id="七、成本和表现"><a href="#七、成本和表现" class="headerlink" title="七、成本和表现"></a>七、成本和表现</h3><p>人很多时候喜欢强调对错，喜欢追求绝对 的公平喜欢要求最好 的结果。但是，从工程的角度讲，好和坏，只是在固定成本下相对的表现。计算机里面无论是软件设计还是硬件设计，都是在平衡性能和成本的关系。</p><p><strong>此外，掌握计算机思维，还需要理解下面两个原则</strong></p><h3 id="一、等价性原则"><a href="#一、等价性原则" class="headerlink" title="一、等价性原则"></a>一、等价性原则</h3><p>很多时候，一个较难的问题A和相对容易的问题B是等价的。但是人类常常容易给佬问题就解决什么问题，给了A就解决A，尽管很难。而计算机则会试图解决等价，但是却更简单的问题。</p><h3 id="二、模块化原则"><a href="#二、模块化原则" class="headerlink" title="二、模块化原则"></a>二、模块化原则</h3><p>我们在生活中，做一个桌子，或者一个椅子，会直接去做。而在计算机的世界里，永远是先制作几个非常简单，能够大量复制的乐高积木块，然后用很多这样简单的模块，塔出复杂的桌子和椅子。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高效学习-转自左耳朵耗子</title>
      <link href="/wenzhang/%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0/"/>
      <url>/wenzhang/%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="高效学习：端正学习态度"><a href="#高效学习：端正学习态度" class="headerlink" title="高效学习：端正学习态度"></a>高效学习：端正学习态度</h2><p>你好，我是陈皓，网名左耳朵耗子。</p><p>在开始这一系列文章之前，我想说，如果你想从我这里得到一些速成的方法，那么你就不用往下看了，学习是不可能速成的。这里只有一些方法和技巧，是我这么多年来行之有效的，分享出来也许对你有帮助。一方面，可能会让你学得更多和更累，另一方面，可能会让你学得更系统、更全面。总之，学习是一件“逆人性”的事，就像锻炼身体一样，<strong>需要人持续付出，会让人感到痛苦，并随时想找理由放弃。</strong></p><p>大部分人都认为自己爱学习，但是：</p><ul><li><p>他们都是只有意识没有行动，他们是动力不足的人。</p></li><li><p>他们都不知道自己该学什么，他们缺乏方向和目标。</p></li><li><p>他们都不具备自主学习的能力，没有正确的方法和技能。</p></li><li><p>更要命的是，他们缺乏实践和坚持。</p></li></ul><p>如果你去研究一下古今中外的成功人士，就会发现，他们基本上都是非常自律的，也都是非常热爱学习的。他们可以沉得下心来不断地学习，在学习中不断地思考、探索和实践。</p><p>所以，如果你不能克服自己 DNA 中的弱点，不能端正自己的态度，不能自律，不能坚持，不能举一反三，不能不断追问等，那么，无论有多好的方法，你都不可能学好。所以，有正确的态度很重要。</p><p>然后，我会在后面给你一些方法和相关的技能，让你可以真正实际操作起来。</p><h3 id="主动学习和被动学习"><a href="#主动学习和被动学习" class="headerlink" title="主动学习和被动学习"></a>主动学习和被动学习</h3><p>1946 年，美国学者埃德加·戴尔（Edgar Dale）提出了「学习金字塔」（Cone of Learning）的理论。之后，美国缅因州国家训练实验室也做了相同的实验，并发布了「学习金字塔」报告。</p><p><img src="https://picgo.symbol.cloudns.be/img/Learning.webp"></p><p>人的学习分为「被动学习」和「主动学习」两个层次。</p><ul><li><p><strong>被动学习</strong>：如听讲、阅读、视听、演示，学习内容的平均留存率为 5%、10%、20% 和 30%。</p></li><li><p><strong>主动学习</strong>：如通过讨论、实践、教授给他人，会将原来被动学习的内容留存率从 5% 提升到 50%、75% 和 90%。</p></li></ul><p>这个模型很好地展示了不同学习深度和层次之间的对比。</p><p>我们可以看到，你听别人讲，或是自己看书，或是让别人演示给你，这些都不能让你真正获得学习能力，因为你是在被别人灌输，在听别人说。</p><p>只有你开始自己思考，开始自己总结和归纳，开始找人交流讨论，开始践行，并开始对外输出，你才会掌握到真正的学习能力。</p><p>举个大家都懂的例子，那就是学习英文，我们从小就是在开始学习英文了，很多人英文成绩可以考得很好，语法也可以不错。然而，哪天真正要和外国人交流的时候，却发现自己的英文能力渣得不要不要的，只会回答：Fine. Thank you, and you? 这就是浅度学习的结果。</p><p>我的英文能力也是一样的，直到有一天进到外企，外企请了个外教每周来公司三次和我们练英文，我的英文能力才有一点点进步，然而，还是不够。后来有一天，公司的客户抱怨我们的一线客服处理问题太慢，问我们在后台做开发的人有谁去一线支持客户，我举手了。于是我接了半年来自日本、新加坡、德国、法国、英国等多个国家的客户电话和邮件。</p><p>在这期间，我的英文能力直线上升，速度快得不得了。一方面是我要把自己知道的讲给客户听，另一方面要跟客户有交流，所以我学得更努力，也更有效果。主要是日本人和德国人给了我足够的信心，这两个国家的人可能是这世界上最严谨的人，他们非常喜欢打破沙锅问到底，而且他们的英文也不怎么好，但是他们都用很慢的语速来和我交流，一方面是怕他们自己说不好，另一方面是也希望我用慢速的话和他们说。于是，大家都在一种慢速的环境下说英文，把每个单词的音都发准了，这使我提高了英文能力。</p><p>后面再跟一些口音很奇葩的老外（比如印度人和法国人）说英文的时候，我就会让他们说慢点，以便我适应他们的口音。几年后，我到了另外一家外国公司工作，需要跟一些口音非常重的印度人和非洲人说英文，我都能听懂，着实把我身边的同事们都震住了。这就是深度学习的最好的例子，要践行！</p><p><strong>所以，学习不是努力读更多的书，盲目追求阅读的速度和数量，这会让人产生低层次的勤奋和成长的感觉，这只是在使蛮力。要思辨，要践行，要总结和归纳，否则，你只是在机械地重复某件事，而不会有质的成长的。</strong></p><h3 id="浅度学习和深度学习"><a href="#浅度学习和深度学习" class="headerlink" title="浅度学习和深度学习"></a>浅度学习和深度学习</h3><p>老实说，对于当前这个社会：</p><ul><li><p>大多数人的信息渠道都被微信朋友圈、微博、知乎、今日头条、抖音占据着。这些信息渠道中有营养的信息少之又少。</p></li><li><p>大多数公司都是实行类似于 996 这样的加班文化，在透支和消耗着下一代年轻人，让他们成长不起来。</p></li><li><p>因为国内互联网访问不通畅，加上英文水平受限，所以，大多数人根本没法获取到国外的第一手信息。</p></li><li><p>快餐文化盛行，绝大多数人都急于速成，心态比较浮燥，对事物不求甚解。</p></li></ul><p>所以，你看，在这种环境下，你根本不需要努力的。你只需要踏实一点，像以前那样看书，看英文资料，你只需要正常学习，根本不用努力，就可以超过你身边的绝大多数人。</p><p>我们整个世界进入了前所未有的信息爆炸时代，人们担忧的不再是无知识可学，而是有学不完的知识。而且时代的节奏变得越来越快，你可能再也不像 20 年前，可以沉着优雅平和地泡上一杯茶，坐在一个远离喧嚣的环境下，认认真真地看本书。这个时代，你再也不会有大块大块的时间，你的时间都被打成碎片了，不知不觉你也成为了快餐文化的拥趸……</p><p>在这样一个时代下，种种迹象表明，快速、简单、轻松的方式给人带来的快感更强烈，而高层次的思考、思辨和逻辑则被这些频度高的快餐信息感所弱化。于是，商家们看到了其中的商机，看到了如何在这样的时代里怎么治愈这些人在学习上的焦虑，他们在想方设法地用一些手段推出各种代读、领读和听读类产品，让人们可以在短时间内体会到轻松获取知识的快感，并产生勤奋好学和成长的幻觉（老实说，像我这种付费专栏或是得到等知识付费产品基本上就是类似的产物）。</p><p>这些所谓的“快餐文化”可以让你有短暂的满足感，但是无法让你有更深层次的思考和把知识转换成自己的技能的有效路径，因为那些都是需要大量时间和精力的付出，不符合现代人的生活节奏。人们开始在朋友圈、公众号、得到等这样的地方进行学习，导致他们越学越焦虑，越学越浮燥，越学越不会思考。于是，他们成了“什么都懂，但依然过不好这一生”的状态。</p><p>只要你注意观察，就会发现，少数的精英人士，他们在训练自己获取知识的能力，他们到源头查看第一手的资料，然后，深度钻研，并通过自己的思考后，生产更好的内容。而绝大部分受众享受轻度学习，消费内容。</p><p>你有没有发现，在知识的领域也有阶层之分，那些长期在底层知识阶层的人，需要等着高层的人来喂养，他们长期陷于各种谣言和不准确的信息环境中，于是就导致错误或幼稚的认知，并习惯于那些不费劲儿的轻度学习方式，从而一点点地丧失了深度学习的独立思考能力，从而再也没有能力打破知识阶层的限制，被困在认知底层翻不了身。</p><p>可见深度学习十分重要，但应该怎样进行深度学习呢？下面几点是关键。</p><ul><li><p>高质量的信息源和第一手的知识。</p></li><li><p>把知识连成地图，将自己的理解反述出来。</p></li><li><p>不断地反思和思辨，与不同年龄段的人讨论。</p></li><li><p>举一反三，并践行之，把知识转换成技能。</p></li></ul><p>换言之，学习有三个步骤。</p><ul><li><p><strong>知识采集</strong>。信息源是非常重要的，<strong>获取信息源头、破解表面信息的内在本质、多方数据印证</strong>，是这个步骤的关键。</p></li><li><p><strong>知识缝合。</strong>所谓缝合就是把信息组织起来，成为结构体的知识。这里，<strong>连接记忆，逻辑推理，知识梳理</strong>是很重要的三部分。</p></li><li><p><strong>技能转换。</strong>通过<strong>举一反三、实践和练习</strong>，以及<strong>传授教导</strong>，把知识转化成自己的技能。这种技能可以让你进入更高的阶层。</p></li></ul><p>我觉得这是任何人都是可以做到的，就是看你想不想做了。</p><p>此外，在正式开始讲如何学习之前，让我先说一些关于学习的观点，这是在为后面的那些学习方法和技巧做提纲挈领的铺垫。</p><h3 id="学习是为了找到方法"><a href="#学习是为了找到方法" class="headerlink" title="学习是为了找到方法"></a>学习是为了找到方法</h3><p><strong>学习不仅仅是为了找到答案，而更是为了找到方法。</strong>很多时候，尤其是中国的学生，他们在整个学生时代都喜欢死记硬背，因为他们只有一个 KPI，那就是在考试中取得好成绩，所以，死记硬背或题海战术成了他们的学习习惯。然而，在知识的海洋中，答案太多了，你是记不住那么多答案的。</p><p>只有掌握解题的思路和方法，你才算得上拥有解决问题的能力。所有的练习，所有的答案，其实都是在引导你去寻找一种“以不变应万变”的方法或能力。在这种能力下，你不需要知道答案，因为你可以用这种方法很快找到答案，找到解，甚至可以通过这样的方式找到最优解或最优雅的答案。</p><p>这就好像，你要去登一座山，一种方法是通过别人修好的路爬上去，一种是通过自己的技能找到路（或是自己修一条路）爬上去。也就是说，需要有路才爬得上山的人，和没有路能造路的人相比，后者的能力就会比前者大得多得多。所以，<strong>学习是为了找到通往答案的路径和方法，是为了拥有无师自通的能力。</strong></p><h3 id="学习是为了找到原理"><a href="#学习是为了找到原理" class="headerlink" title="学习是为了找到原理"></a>学习是为了找到原理</h3><p><strong>学习不仅仅是为了知道，而更是为了思考和理解。</strong>在学习的过程中，我们不是为了知道某个事的表面是什么，而是要通过表象去探索其内在的本质和原理。真正的学习，从来都不是很轻松的，而是那种你知道得越多，你的问题就会越多，你的问题越多，你就会思考得越多，你思考得越多，你就会越觉得自己知道得越少，于是你就会想要了解更多。如此循环，是这么一种螺旋上升上下求索的状态。</p><p>但是，这种循环，会在你理解了某个关键知识点后一下子把所有的知识全部融会贯通，让你赫然开朗，此时的那种感觉是非常美妙而难以言语的。在学习的过程中，我们要不断地问自己，这个技术出现的初衷是什么？是要解决什么样的问题？为什么那个问题要用这种方法解？为什么不能用别的方法解？为什么不能简单一些？……</p><p>这些问题都会驱使你像一个侦探一样去探索背后的事实和真相，并在不断的思考中一点一点地理解整个事情的内在本质、逻辑和原理。<strong>一旦理解和掌握了这些本质的东西，你就会发现，整个复杂多变的世界在变得越来越简单。你就好像找到了所有问题的最终答案似的，一通百通了。</strong></p><h3 id="学习是为了了解自己"><a href="#学习是为了了解自己" class="headerlink" title="学习是为了了解自己"></a>学习是为了了解自己</h3><p><strong>学习不仅仅是为了开拓眼界，而更是为了找到自己的未知，为了了解自己。</strong>英文中有句话叫：You do not know what you do not know，可以翻译为：你不知道你不知道的东西。也就是说，你永远不会去学习你不知道其存在的东西。就好像你永远 Google 不出来你不知道的事，因为对于你不知道的事，你不知道用什么样的关键词，你不知道关键词，你就找不到你想要的知识。</p><p>这个世界上有很多东西是你不知道的，所以，学习可以让你知道自己不知道的东西。只有当我们知道有自己不知道的东西，我们才会知道我们要学什么。所以，我们要多走出去，与不同的人交流，与比自己聪明的人共事，你才会知道自己的短板和缺失，才会反过来审视和分析自己，从而明白如何提升自己。</p><p>山外有山，楼外有楼，人活着最怕的就是坐井观天，自以为是。因为这样一来，你的大脑会封闭起来，你会开始不接受新的东西，你的发展也就到了天花板。<strong>开拓眼界的目的就是发现自己的不足和上升空间，从而才能让自己成长。</strong></p><h3 id="学习是为了改变自己"><a href="#学习是为了改变自己" class="headerlink" title="学习是为了改变自己"></a>学习是为了改变自己</h3><p><strong>学习不仅仅是为了成长，而更是为了改变自己。</strong>很多时候，我们觉得学习是为了自己的成长，但是其实，学习是为了改变自己，然后才能获得成长。为什么这么说呢？我们知道，人都是有直觉的，但如果人的直觉真的靠谱，那么我们就不需要学习了。而学习就是为了告诉我们，我们的很多直觉或是思维方式是不对的，不好的，不科学的。</p><p>只有做出了改变后，我们才能够获得更好的成长。你可以回顾一下自己的成长经历，哪一次你有质的成长时，不是因为你突然间开窍了，开始用一种更有效率、更科学、更系统的方式做事，然后让你达到了更高的地方。不是吗？当你学习了乘法以后，在很多场景下，就不需要用加法来统计了，你可以使用乘法来数数，效率提升百倍。</p><p>当你有一天知道了逻辑中的充要条件或是因果关系后，你会发现使用这样的方式来思考问题时，你比以往更接近问题的真相。<strong>学习是为了改变自己的思考方式，改变自己的思维方式，改变自己与生俱来的那些垃圾和低效的算法。总之，学习让我们改变自己，行动和践行，反思和改善，从而获得成长。</strong></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>总结一下今天的内容。首先，学习是一件“逆人性”的事，就像锻炼身体一样，需要人持续付出，但会让人痛苦，并随时可能找理由放弃。如果你不能克服自己 DNA 中的弱点，不能端正自己的态度，不能自律，不能坚持，不能举一反三，不能不断追问等，那么，无论有多好的方法，你都不可能学好。因此，有正确的态度很重要。</p><p>此外，还要拥有正确的学习观念：学习不仅仅是为了找到答案，而更是为了找到方法；学习不仅仅是为了知道，而更是为了思考和理解；学习不仅仅是为了开拓眼界，而更是为了找到自己的未知，为了了解自己；学习不仅仅是为了成长，而更是为了改变自己，改变自己的思考方式，改变自己的思维方式，改变自己与生俱来的那些垃圾和低效的算法。</p><p>端正的学习态度和正确的学习观念，是高效学习的第一步，拥有这两者一定可以让你事半功倍。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown与Typora介绍</title>
      <link href="/wenzhang/Markdown%E4%B8%8ETypora%E4%BB%8B%E7%BB%8D/"/>
      <url>/wenzhang/Markdown%E4%B8%8ETypora%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><hr><h1 id="一、Markdown与Typora介绍"><a href="#一、Markdown与Typora介绍" class="headerlink" title="一、Markdown与Typora介绍"></a>一、Markdown与Typora介绍</h1><h2 id="1-1Markdown介绍"><a href="#1-1Markdown介绍" class="headerlink" title="1.1Markdown介绍"></a>1.1Markdown介绍</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Markdown 是一种轻量组长标记语言，它允许人们使用易读易写的纯文本格式编写文档。</span><br><span class="line">Markdown 语言在2004 由John Gruber创建</span><br><span class="line">Markdown 编写的文档可以导出为HTML、Word、图像、PDF、EPUB等多种格式的文档</span><br></pre></td></tr></table></figure><h2 id="1-2-Typora介绍与下载"><a href="#1-2-Typora介绍与下载" class="headerlink" title="1.2 Typora介绍与下载"></a>1.2 Typora介绍与下载</h2><p>Typora编辑器让人们能更简单地用Markdown语言书写文字，解决了使用传统的Markdown编辑器写文的痛点，并且界面简洁优美，实现了实时预览等功能。</p><p>Typora官网：<a href="https://typora.io/">https://typora.io</a> </p><p>windows版本下载地址：<a href="https://typora.io/#windows">https://typora.io/#windows</a></p><h1 id="二、Markdown语法"><a href="#二、Markdown语法" class="headerlink" title="二、Markdown语法"></a>二、Markdown语法</h1><h2 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h2><p>使用 <strong>#</strong> 可以表示标题，一级标题对应一个 <strong>#</strong> ，二级标题对应两个 <strong>#</strong> 号，最多有六级标题。**#** 号后要紧接着一个空格才能表示标题，否则就是普通字符。</p><p>在<strong>Typora</strong>中，也可以用快捷键 **Ctrl+1(2，3，4，5，6)**表示相对应的标题。</p><h2 id="2-2-字体"><a href="#2-2-字体" class="headerlink" title="2.2 字体"></a>2.2 字体</h2><p>用一对星号 ***** 括住的文本表示斜体文本，也可以用<em>Ctrl+I</em>来表示</p><p>用一对 ** 表示加粗：** 要变加粗的文本  **，也可以用Ctrl+B来表示 </p><p>用一对 *** 来表示粗斜体 ，</p><h2 id="2-3各种线"><a href="#2-3各种线" class="headerlink" title="2.3各种线"></a>2.3各种线</h2><ul><li>分割线，可以使用三个及以上的 + 号或 * 号或 - 来表示一条分割线。</li></ul><p>*号分割线</p><hr><p>+号分割线</p><p>+++++</p><p>-号分割线</p><hr><ul><li><p>删除线，可以使用一对 ~~ 括住的文本来表示删除文本，如：~~ 文本 ~~，中间不能有空格</p><p><del>要删除的文本</del>，也可以用Alt+Shift+5来表示<del>删除线</del></p></li><li><p>下划线，可以使用HTML的标签<u> 和 </u>表示增加下划线的文本，之间不能有空格。也可以使用Ctrl+U来表示</p></li></ul><h2 id="2-4列表"><a href="#2-4列表" class="headerlink" title="2.4列表"></a>2.4列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>可以使用* ，+ 或者 - 来表示无序列表项，记住要加一个空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">* 第二项</span><br></pre></td></tr></table></figure><p>* </p><ul><li><ul><li></li><li>右<ul><li>右</li><li>左</li></ul></li></ul></li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>可以使用<strong>数字加上 . 再加上空格</strong> 来表示有序列表</p><ol><li>第一项</li><li>二</li><li>三</li><li>四</li></ol><h2 id="2-5区块"><a href="#2-5区块" class="headerlink" title="2.5区块"></a>2.5区块</h2><p><strong>区块用 &gt; 来表示，二级就是&gt;&gt; ,按回车键一样可以退出区块</strong></p><blockquote><p>这是区块</p><p>区块也可以嵌套</p><blockquote><p>二级区块</p><blockquote><p>三级区块</p></blockquote></blockquote></blockquote><h2 id="2-6代码块"><a href="#2-6代码块" class="headerlink" title="2.6代码块"></a>2.6代码块</h2><p>一行代码用 前后各一个 &#96; 来括起来</p><p><code>printf(&quot;hello World&quot;);</code></p><p>多行可以用 &#96;&#96;&#96;来表示 ，右下角可以选择编程语言</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7-链接"><a href="#2-7-链接" class="headerlink" title="2.7 链接"></a>2.7 链接</h2><p>直接输入或者复制粘贴即可 <a href="http://www.baidu.com/">www.baidu.com</a></p><p>页内跳转：<code>[链接文字](#标题文字)</code></p><p>比如[跳转到2.字体](#2.2 字体)</p><p>需要按住Ctrl加鼠标点击</p><h2 id="2-8图片"><a href="#2-8图片" class="headerlink" title="2.8图片"></a>2.8图片</h2><p>本地图片：路径不对，或者发送给别人容易失效，推荐图床。</p><p><img src="/%E5%9B%BE%E7%89%87%E5%9C%B0%E5%9D%80" alt="属性文本"></p><p>图床：</p><p>直接从图床复制粘贴地址过来即可</p><h2 id="2-9-表格"><a href="#2-9-表格" class="headerlink" title="2.9 表格"></a>2.9 表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|:---|:---:|---:|</span><br><span class="line">|单元格|单元格|单元格|</span><br></pre></td></tr></table></figure><p>结果如下：</p><p>+++++</p><table><thead><tr><th align="left">表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr></tbody></table><p>第二项可以设置宽度(不同的-表示不同宽度)和对齐方式</p><ul><li>:-   表示左对齐</li><li>-：表示右对齐</li><li>:-:  表示中间对齐</li></ul><p>也可以用 <strong>Ctrl + T</strong> 来插入表格，左上角和右上角都可以进行设置</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h1 id="三、Typora与数学公式"><a href="#三、Typora与数学公式" class="headerlink" title="三、Typora与数学公式"></a>三、Typora与数学公式</h1><h2 id="3-1如何插入数学公式"><a href="#3-1如何插入数学公式" class="headerlink" title="3.1如何插入数学公式"></a>3.1如何插入数学公式</h2><blockquote><p>输入 $$ 按回车,自动居中,换行：在换行位置加上 \</p></blockquote><p>$$<br>1+19&#x3D;20<br>$$</p><h2 id="3-2上标和下标"><a href="#3-2上标和下标" class="headerlink" title="3.2上标和下标"></a>3.2上标和下标</h2><p>上下标可以使用 ^ 和 _ 来表示<br>$$<br>3^3+4_1-84<br>$$<br>如果上下标不止一个,每一层都需要用{}将其括起来<br>$$<br>2^{3^{3^4}}<br>$$</p><h2 id="3-3根号"><a href="#3-3根号" class="headerlink" title="3.3根号"></a>3.3根号</h2><p>使用 \sqrt{3} 来表示 根号3<br>$$<br>\sqrt{10} + \sqrt{10}&#x3D;2\sqrt{10}<br>$$<br>也可以用\sqrt[3]{10}来表示任意根号信息<br>$$<br>\sqrt[3]{10} + \sqrt[6]{59}<br>$$</p><h2 id="3-4上下水平线"><a href="#3-4上下水平线" class="headerlink" title="3.4上下水平线"></a>3.4上下水平线</h2><p>可以使用 \underline{} 和 overlinde{}来表示上下水平线<br>$$<br>\underline{10} + \overline{12}<br>$$</p><h2 id="3-5上下水平大括"><a href="#3-5上下水平大括" class="headerlink" title="3.5上下水平大括"></a>3.5上下水平大括</h2><p>可以用 \overbrace{} 和 \underbrace{}来表示<br>$$<br>\overbrace{x_1+x_2+x_3} +<br>\underbrace{y_1+y_2+y_3}<br>$$<br>当然，也可以添加描述说明，后缀添加  ^{} 或者 <em>{}<br>$$<br>\overbrace{x_1+x_2+x_3}^{3个元素} + \underbrace{y_1+y_2+y_3}</em>{3个元素}<br>$$</p><h2 id="3-6向量符号"><a href="#3-6向量符号" class="headerlink" title="3.6向量符号"></a>3.6向量符号</h2><p>用 \vec{A} 表示单个向量</p><p>用 \overrightarrow{AB} 和 \overleftarrow{AB} 表示多个向量<br>$$<br>\vec{q}\<br>\vec{p}\<br>\overrightarrow{ABC}\<br>\overleftarrow{ABC}<br>$$</p><h2 id="3-7分数"><a href="#3-7分数" class="headerlink" title="3.7分数"></a>3.7分数</h2><p>用 \frac{}{} 来表示分数<br>$$<br>\frac{1}{2}\<br>\frac{\sqrt[5]{100}}{5}\<br>\frac{4}{\sqrt{3}}<br>$$</p><h2 id="3-8积分运算符"><a href="#3-8积分运算符" class="headerlink" title="3.8积分运算符"></a>3.8积分运算符</h2><p>用 \int 来生成，用 \int_{}^{} 来表示上下界<br>$$<br>\int_{1}^{10}<br>$$</p><h2 id="3-9求和运算符"><a href="#3-9求和运算符" class="headerlink" title="3.9求和运算符"></a>3.9求和运算符</h2><p>用 \sum 来生成，用 \sum_{}^{}来表示上下界<br>$$<br>\sum_{i&#x3D;1}^{10}x_i<br>$$</p><h2 id="3-10连乘运算符"><a href="#3-10连乘运算符" class="headerlink" title="3.10连乘运算符"></a>3.10连乘运算符</h2><p>连乘运算符用 \prod 表示，用 \prod_{}^{}表示上下界<br>$$<br>\prod \<br>\prod_{i&#x3D;1}^{10}x_i<br>$$</p><h2 id="3-11特殊符号"><a href="#3-11特殊符号" class="headerlink" title="3.11特殊符号"></a>3.11特殊符号</h2><p>希腊字母：</p><p>α为<code>\alpha</code>，β 为<code>\beta</code>，γ为<code>\gamma</code>，θ为<code>\theta</code>，ρ为<code>\rho</code>，λ为<code>\lambda</code>，μ为<code>\mu</code>，Δ为<code>\Delta</code>，π为<code>\pi</code>，Ω为<code>\Omega</code></p><p>首字母为小写，则为小写字母；首字母为大写，则为大写字母。<br>$$<br>\alpha + \beta + \gamma + \theta + \rho + \lambda + \mu + \delta + \Delta + \pi + \Omega<br>$$<br>关系运算符：</p><p>大于等于为 \geq  或者 \ge</p><p>小于等于为 \leg  或者 \le</p><p>不等于 \neq或者 \ne<br>$$<br>\ge  \le \ne<br>$$<br>乘除：乘为 \times,除为 \div<br>$$<br>+-\times \div<br>$$</p><h2 id="3-12矩阵"><a href="#3-12矩阵" class="headerlink" title="3.12矩阵"></a>3.12矩阵</h2><blockquote><p>\begin{matrix}</p></blockquote><blockquote><p>…</p></blockquote><blockquote><p>\end{matrix}</p></blockquote><p>$$<br>\left[\begin{matrix}<br>1 &amp; 2 &amp; 3\<br>4 &amp; 5 &amp; 6\<br>7 &amp; 8 &amp; 9<br>\end{matrix}\right]<br>$$</p><p>或通过\left 和 \right加上相应的括号</p><h2 id="3-13方程组"><a href="#3-13方程组" class="headerlink" title="3.13方程组"></a>3.13方程组</h2><ul><li>\begin{eqution}和\end{euqation} 表示它们之间是方程组</li><li><code>\left\&#123;</code>和<code>\right.</code>表示在方程组的左边加上<code>&#123;</code>，在右边加上<code>.</code>，因为<code>&#123;</code>在外联公式中有特殊的意义，因此需要在其前面加上转义字符<code>\</code>。</li><li><code>\begin&#123;array&#125;</code>和<code>\end&#123;array&#125;</code>表示它们之间的是数组，其实这也可以用来表示矩阵。</li><li><code>&#123;lr&#125;</code>表示有两列，第一列的值靠左排列，用<code>l</code>表示，第二列的值靠右排列，用<code>r</code>表示，如果是中间对齐则为<code>c</code>。</li><li>然后下面三行是方程式，用<code>&amp;</code>分割，用<code>\\</code>换行。</li></ul><p>$$<br>\begin{equation}<br>\left{<br>             \begin{array}{lr}<br>             x&#x3D;\dfrac{3\pi}{2}(1+2t)\cos(\dfrac{3\pi}{2}(1+2t)), &amp;  \<br>             y&#x3D;s, &amp; 0\leq s\leq L,|t|\leq1.\<br>             z&#x3D;\dfrac{3\pi}{2}(1+2t)\sin(\dfrac{3\pi}{2}(1+2t)), &amp;<br>             \end{array}<br>\right.<br>\end{equation}<br>$$</p><h2 id="3-14分段函数"><a href="#3-14分段函数" class="headerlink" title="3.14分段函数"></a>3.14分段函数</h2><p>跟方程组类似<br>$$<br>y&#x3D;\begin{equation}<br>    \left{<br>        \begin{array}{lr}<br>        x-1 &amp; x \leq 0 \<br>        x+1 &amp; x&gt;0<br>        \end{array}<br>    \right.<br>\end{equation}<br>$$</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
